Azure Active Directory
	Cloud-Based identity and access management service. 
	Manage users, Sign-Ins and access to AD-related resources

Domain
	A domain is an area of a network organized by a single authentication database
	An Active Directory Domain is a logical grouping of AD objects on a network 

Domain Controller (DC)
	A domain controller is a server that authenticates users identities and authorizes their access to resources 
	
Domain Computer
	A computer that is registered wiht a central authentication database A domain computer would be an AD Object 
	
AD Object
	An AD Object is the basic element of Active Directory such as: 
		Users, Groups, Printers, Shared Folders

Group Policy Object
	A virtual collection fo policy settings. It controls what AD objects have access to. 
	
Organization Units (OU)
	A subdivision within Active Directory into which you can place users, groups, computers, and other organizational units. 
	
Directory Service
	A directory service, such as Active Directory Domain Services (AD DS), provides the methods for storing directory data and making this data available to network users and administrators. A Directory service on a Domain Controller
	
Azure AD - Tenant
	A tenant represents an organization in Azure Active Directory
	A tenant is a dedicated Azure AD Server Instance 
	A tenant is automatically created when you sign up for either
		Microsoft Azure
		Microsoft Intue
		Microsoft 365

Azure Active Directory Domain Services (AD DS)
	Azure Active Direcotry Domain Services (AD DS) provides managed domain service such as: 
		Domain Joins
		Group Policies
		LDAP (Lightweight Directory access protocol)
		Kerberos / NTLM Authentication
		
Azure AD Connect 
	Azure AD Connect is a hybrid service to connect your on-premise Active Directory to your Azure Account
	Azure AD Connect allows for seamless Single Sign On from your on-premise workstation to Microsoft Azure 
	Azure AD Connect has the following features: 
		
		Password hash synchronization - sign-in method, synchronizes a hash of a users on-premises AD passwords with Azure AD
		
		Pass-through authentication - sign-in method, allows users to use the same password on-premises and in the cloud
		
		Federation Integration - hybrid environment using an on-premises AD FS infrastructure, for certificate renewal
		
		Synchronization - Responsible for creating users, groups, and other objects, ensures on-prem and cloud data matches
		
		Health Monitoring - robust monitoring and provides a central location in the Azure portal to view this activity
		
Active Directory - Users
	Users represent an identity for a person or employee in your domain. A user has logon credentials and can use them to log into the Azure Portal 
		You can assign roles and administrative roles to users 
		You can add users to groups 
		You can enforce authentication methods such as (MFA) 
		You can track users sign ins 
		Track devices user's login from and allow or deny devices 
		Assign Microsoft licenses
		
		Azure AD has two kinds of users: 
			Users - A user belongs to your organization
			Guest Users - A guest user belongs to another organization
		
Azure AD Groups	
	Groups - lets the resource owner (of Azure directory owner), assign a set of access permissions to all the members of the group, instead of having to provide the rights one-by-one. 
	Groups contain: 
		Owners - Has permissions to add and remove members 
		Members - Have permissions to do things 
	Assignment 
		You can assign roles directly to a group 
		You can assign applications directly to a group
		
		Request to Join Groups
			The group owner can let userse find their own groups to join, instead of assigning them. The owner can also set up the group to automatically accept all users that joinor to require approval. 	
		
Azure AD - Assign Access Rights
	There are four ways to assign resource access rights to yoru users: 
		Direct Assignment - The resource owner directly assigns the user to the resource
		Group Assignment - The resource owner assigns an Azure AD group to the resource, which automatically gives all of the group members acceess to the resource 
		
		Rule-based Assignment - The resource owner creates a group and uses a role to define which users are assigned to a specific resource
		 
		 External Authority Assignment - Accesss comes from an external source, such as an on-premises directory or a SaaS app. 
		 
Azure AD - External Identities 
	External Identities in Azure AD, allow people outside your organization to access your apps and resources, while letting them sign in using whatever identity they prefer.
		
		Supports logins from Google and Facebook
		Share Apps with external users (B2B COllaboration)
		Develop Apps intended for other Azure AD tenants (single tenant or multi tentant) 
		Develop white-labeled apps for consumers and customers (Azure AD B2C) 
	
Azure AD - Device Management 
	What is Device Identify Management? 
		The management of a physical devices such as phones, tablets, laptops and desktop computers, that are granted access to company resources such as Printers, Cloud Resources via device-based Conditional Access. 	
	
		For companies with a distributed workforce, that allows remote employedes and employees who are allowed use their own personal equipment (Bring Your Own Device).
		
		A company needs a way to protect their organization's assets such as access to cloud resoures across those devices where they have less control over the physical securities of the work environment. 
		
	There are 3 ways to get devices into Azure AD
		Azure AD Registered
			Personally owned or mobile devices
			And signed in with a personal microsoft or local account.
			Windows 10 
			iOS
			Android MacOS
		Azure AD Joined 
			Owned by an organization
			And signed in with an Azure AD account belonging to the organization. 
			They exist only in the cloud
			Windows 10
			Windows Server 2019 VM's running in Azure 
		Hybrid Azure AD Joined
			Owned by an organization
			And are signed in with an Active Directory Domain Services account belonging to that organization. 
			They exist in the cloud and on-premises
			Windows 7, 8.1, or 10
			Windows Server 2008 or newer
			
Azure AD Registered Devices 
	Definition - Registered to Azure AD without requiring organizational account to sign in to the device 
	Primary audience - Bring your own device (BYOD), Mobile devices 
	Device Ownership - User or Organization
	Operating Systems - Windows 10, iOS, Android and MacOS
	Provisioning
		Windows 10 - Settings 
		iOS/ Android - Company Portal or Microsoft Authenticator App
		MacOS - Company Portal 
	Device sign in options
		End-user local credentials, Passwords, Windows hello, PIN
		Biometrics or Pattern for other devices 
	Device Management 
		Mobile Device Managment (example: Microsoft Intune)
		Mobile Application Management
	Key capabilities 
		SSO to cloud resources 
		Conditional Access when Enrolled into Intune
		Conditional Access via App protection policy
		Enables Phone sign in with Microsoft Authenticator app 

Windows Hello 
	Gives Windows 10 users an alternative way to log into their devices and applications using:
		fingerprint
		iris scan 
		facial recognition
		
Azure AD Registered Devices - MDM and MAM 
	Mobile Device Managment (MDM) 
		control the entire device, can wipe data from it, and also reset it to factory settings 
	Mobile Application Management (MAM)
		Publish, Push, Configure, Secure, Monitor, And update mobile apps for your users
	MDM and MAM is managed via Microsoft Intune 
		To use Microsoft Intune you have to upgrade to Azure AD Premium 2
		Microsoft Intune is part of Microsoft Endpoint Manager
		Microsoft Endpoint Manager and Intune are part of Microsoft's Enterprise Mobility = Security (EMS)
		Intune = Endpoint Manager = EMS 
		
Azure Registered Devices - EMS 
	Microsoft Enterprise Mobility + Security (EMS) 
		Definition - Is an intelligent mobility management and security platform. Protect and secure your organization and empowers your employees to work in a new and flexible ways. 
		
		EMS is an umbrella of multiple Microsoft and Azure Services 
			VERY NOTABLY 
				AZURE ACTIVE DIRECTORY 
				MICROSOFT INTUNE 
				
Azure AD Registered Devices - Microsoft Authenticator
	Secure sign-ins for all your online accounts using: 
		MFA 
		Passwordless
		Password autofill
		
Azure AD Joined Devices 
	Definition - Joined only to Azure AD requiring organizatioonal account to sign-in to the device 
	Primary Audience
		Suitable for both cloud-only and hybrid organizations
		Applicable to all users in an organization
	Device Ownership 
		Organization
	Operating Systems
		All Windows 10 devices except Windows 10 Home
		Windows Server 2019 Virtual Machines running in Azure, Windows Autopilot 
	Provisioning
		Self-service: Windows OOBE or Settigns, Bulk Enrollment, Winodws Autopilot
	Device Sign in options
		Organiztional accounts using: password, windows hello for business, FIDO2.0 security keys(preview)
	Device Management 
		Mobile Device Managment (Microsoft Intune) 
		Co-management with Microsoft Intune and Microsoft Endpoint Configure Manager 
	Key capabilities 
		SSO to both cloud and on-premises resources 
		Conditional Access through MDM enrollment and MDM compliance evaluation
		Self-service Password Reset and Windows Hello PIN on lock screen 
		
		
Azure AD Joined Devices - Fido2.0 Security Keys 
	Fast Identity Online (FIDO) Alliance 
		An open industry association whose mission is to develop and promote authentication standards that help reduce the world's over reliance on paswords. 
		FIDO Alliance has published three sets of open specifications for simpler, stronger user authentication 
			FIDO Universal Second Factor (FIDO U2F) 
			FIDO Universal Authentication Framework (FIDO UAF)
			Client to Authenticator Protocols (CTAP) 
			CTAP is complementary to the W3C's Web Authentication (WebAuthn) specification; together they are known as FIDO2
	What is a Security Key? 
		A secondary device used as second step in authentication process to gain access to a device, workstation or application. 
		A security key can resemble a memory stick. 
		When your finger makes contact with a button or exposed metal on the device it will generate and autofill a security token. 
			Works otu of the box with Gmail Facebook and hundreds more 
			Supports FIDO2/WebAuthn, U2F
			Waterproof and crush resistant 
			USB-A and NFC dual connectors on a single key 
			
Hybrid Azure AD joined devices 
	Definition - Joined to on-premises AD and Azure AD requiring organizational account to sign in to the device 
	Primary Audience
		Suitable for hybrid organizations with existing on-premises AD infrastructure 
		Applicable to all users in an organization
	Device Ownership
		Organization
	Operating Systems
		Windows 10, 8.1,j and 7, Windows Server 2008/R2, 2012/R2, 2016 and 2019
	Provisioning 
		Windows 10, Windows Server 2016/2019
		Domain join by IT and autojoin via Azure AD Connect or ADFS config
		Domain joing by IT and autojoin via Azure AD Connect or ADFS config
		Domain join by Windows Autopilot and autojoin via Azure AD Connect or ADFS config
	Device sign in options 
		Organizational accounts using: 
			Password
			Windows Hellol for Business for Win 10
	Device Management
		Group policy, Configuration Manager standalone or co-management with Microsoft Intune
	Key capabilities 
		SSO to both cloud and on-premises resources 
		Conditional Access through Domain Join or through Intune if co-managed 
		Self-Service Password Reset and Windows Hello PIN reset on lock screen 
		Enterprise State Roaming across devices
		
Hybrid Azure AD joined devices - Windows Autopilot
	Windows Autopilot is a collection of technologies used to set up and pre-configure new devices, getting them ready for productive use
	When initially deploying new Windows devices
		Windows Autopilot uses the OEM-optimized version of windows 10
		This version is preinstalled on the device, so you don't have to maintain custom images and drivers for every device model
		Instead of re-imaging the device, your existing Windows 10 installation can be transformed into a "business-ready" state that can: 
			Once deployed, you can manage Winsdows 10 devices with: 
				Microsoft Intune
				Windows Update for Business
				Microsoft Endpoint Configuration Manager 
				other similar tools 


Azure Roles - Types of Roles 
	Roles can be confusing because Azure has three types of roles that can serve the same purpose​
		Classic subscription administrator roles​
			This is the original role system.​
		Azure roles​
			This is an authorization system is known as Role-Based Access Controls (RBAC) and is built on top of Azure Resource Manager​.
		Azure Active Directory (Azure AD) roles​
			Azure AD roles are used to manage Azure AD resources in a directory​.


Azure Roles - IAM Access Controls
	Identity Access Management (IAM) allows you to create and assign roles to users​
	Azure Roles (RBAC system)​
	Roles restrict access to resource actions (also known as operations). 	There are two types of roles:​
		BuiltInRole – Managed Microsoft roles are read-only pre-created Roles for you to use​
		CustomRole – A role created by you with your own custom logic​ 
	Role Assignment​
		Is when you apply a role to a​
			service principle​
			(user) group ​
			user​ 
	Deny Assignments​
	Block users from performing specific actions even if a role assignment grants them access. The only way to apply Deny assignments is through Azure BluePrints​


Azure Roles - Classic Administrator 
	Classic Administrators is the original role system. You should use the new RBAC system when possible​
	Classic Administrators have three types of roles:​
	Account Administrator The billing owner of the subscription. Has access to the Azure portal.​
	Service Administrator same access of a user assigned the Owner role at subscription scope. Full access to the Azure portal.​
	Co-Administrator same access of a user who is assigned the Owner role at the subscription scope​


Azure Roles - RBAC
	Azure role-based access control (Azure RBAC) helps you manage who has access to Azure resources, what they can do with those resources, and what areas they have access to.​
	Role Assignments the way you control access to resources​
	A Role Assignment is consists of these three elements​
		security principal​
		role definition​
		scope​ 
	There are four fundamental Azure roles​
	Azure RBAC includes over 70 built-in roles​
	A Security Principal represents the identities requesting access to an Azure resource such as:​
	User An individual who has a profile in Azure Active Directory​
	Group A set of users created in Azure Active Directory.​
	Service Principal A security identity used by applications or services to access specific Azure resources. ​
	Managed identity An identity in Azure Active Directory that is automatically managed by Azure.
	Scope is the set of resources that access for the Role 	Assignment applies to.​
	Scope Access Controls at the Management, Subscription, or Resource Group level.​
	A Role Definition is a collection of permissions. ​
	A role definition lists the operations that can be performed, such as read, write, and delete.
	Roles can be high-level, like owner, or specific, like virtual machine reader.​
	Azure has built-in roles and you can define custom roles​
	These are the four fundamental built-in role​​
	Note: User Access Administrator should have the ability to Read resources of all types, except secrets.


Azure Roles - Azure AD Roles
	Azure AD roles are used to manage Azure AD resources in a 	directory such as:​
		create or edit users​
		assign administrative roles to others​
		reset user passwords ​
		manage user licenses​
		manage domains.​ 
	A few important Built-In Azure AD roles you should know:​
		Global Administrator Full access to everything​
		User Administrator Full access to create and manage users​
		Billing Administrator Make purchases, manage subscriptions and support tickets​ 
	You can create custom roles but you need to purchase either:​
		Azure AD Premium P1 or P2​ 
    
    
Azure Roles - Azure Roles
	Azure Role document syntax of the property names will change whether its Azure PowerShell or Azure CLI
	Name (roleName) The display name of the custom role
	Id (name) The unique ID of the custom role. This is autogenerated for you
	IsCustom (roleType) Indicates whether this is a custom role. (true or false)
	Description (description) The description of the custom role
	Actions (actions) An array of strings that specifies the management operations that the role allows to be performed.
	NotActions (notActions) An array of strings that specifies the management operations that are excluded from the allowed Actions
	DataActions (dataActions) An array of strings that specifies data operations the role is allowed perform to your data within that 	object.
	NotDataActions (notDataActions) An array of strings that specifies the data operations that are excluded from the allowed DataActions
	AssignableScopes (assignableScopes) An array of strings that specifies the scopes that the custom role is available for assignment. You can only define one management group in AssignableScopes of a custom role.
	Wildcard permissions
	Actions, NotActions, DataActions, and NotDataActions support 	wildcards (*) 
	A wildcard allows you to apply to match everything


Azure Roles - Policies vs RBAC
	Azure Policies
		They are used to ensure compliance of resource.
		Evaluates state by examining properties on resources that are represented in Resource Manager and properties of some Resource Provider
		Doesn't restrict actions (also called operations)
		ensures that resource state is compliant to your business rules without concern for who made the change or who has permission to make a change
		Even if an individual has access to perform an action, if the result is a non-compliant resource, Azure Policy still blocks the create or update
	Azure Roles
		They are used to control access to Azure resources
		Focuses managing user actions at different scopes
		Does restriction on Azure resources


Azure Roles - Azure AD Roles vs RBAC
	Azure AD Roles
	They are used to control access of AD resources
	AD resources being:
		Users
		Groups
		Billing
		Licensing
		Application Registration
		Etc… 
	Azure Roles
		They are used to control access to Azure resources
		Azure resources being:
		Virtual Machines
		Databases
		Cloud Storage
		Cloud Networking
		Etc.. 
	By default, Azure roles and Azure AD roles do not span Azure and Azure AD
	By default, the Global Administrator doesn't have access to Azure resources.
	Global Administrator can gain access to Azure resource if granted the User Access Administrator role (an Azure role) 


Azure Policies - Azure Policy Definition File
	Display Name - Identifies the policy (128 character limit) 
	Type (read only )
		Built in - maintained by Michaelsoft 
		Custom - Created by you
		Static - Microsoft Owned, A regulatory Compliance
	Description - Provides the context of the policy 
	Metadata - Optional key value information to store on the policy
	Mode - Determines which resource types are evaluated. Changes whether using resource provider or Azure Resource Manager 
		Resource Manager 
			All - resource groups, subscriptions and all resource types
			Indexed - only resource types that support tags and location
		Resource Provider
			Microsoft.ContainerService.Data
			Microsoft.Kubernetes.Data
			Microsoft.KeyVault.Data
		Parameters - Values you can pass into the policy to allow the policy to be more flexible. A parameter has the following properties 
			Name - the name of the parametere 
			Type - string, array, object, boolean, integer, float or datetime
			Metadata - used by azure to display friendly information
				description
				display name 
				strong type 
				assign permissions
			defaultvalue
			allowevalues
	Policy Rule
		consists of an if and then blocks. In the if block, you define one or more conditions that specify when the policy is enforced. You can apply logical operators to these conditions to precisely define the scenario for a policy 
		Deny - the resource creation / update fails due to policy
		Audit - Creates a warning event in the activity log when evaluating a non-compliant resource but it doesn't stop the request 
		Append - Adds additional parameters/ fields to the requested resource during creation or update. A common example is adding tags on resources such as Cost Center or specifying allowec IPs for a storage resource. 
		Audit if not exists - creates a warning event in the activity log when evaluating a non-compliant resource, but it doesn't stop the request 
		Deploy if not exists - Executes a template deployment when specific condition is met. for example if SQL encryption is enabled on a database, then it can run a template after the DB is created to set it up a specific way. 
		Disabled - The policy is ignored (disabled). Oftern used for testing 
		
		
Azure Resource Manager - Azure Resource Manager 
	A deployment and management service for Azure
	Enables you to create, update, and delete resources in your azure account
Azure Resource Manager - Introduction
	Azure Resource Manager (ARM) is a service that allows you to manager Azure resources
		Azure Resource Manager is a collection of services in the Azure Portal, so you can't simply type in "Azure Resource Manager" 
	It is a management layer that allows you to: 
		Create, Update, Delete Resources
		Apply Management features eg. Access Controls, Locks, Tags
		Writing Infrastructure as Code (IaC) via JSON templates. 
			The specific features we are going to look at that make up ARM layer are the following: 
				Subscriptions
				Management Groups
				Resource Groups
				Resource Providers 
				Resource Locks
				Azure Blueprints
				Resources Tags
				Access Control 
				Role-Based Access Controls (RBAC) 
				Azure Policies 
				ARM Templates 
				
				
Azure Resource Manager - Use Case
	Think of Azure Resource Manager (ARM) as a gate keeper. 
	All requests flow through ARM and it decides whether that request can be performed on a resource. 
	
	
Azure Resource Manager - Scoping
	What is scope? 
	Scope is a boundary of control for azure resources. it is a way to governyou resource by placing resources 
		within a logical grouping 
		and also applying a logical restriction in the form of rules 
		
	Management Groups - A logical grouping of multiple subscriptions 
		Subsciptions - grants you access to Azure services based on a billing and support agreement
			Resource Groups - a logical grouping of multiple resources 
				Resources - an azure service eg. Azure VM's 
				
				
Azure Resource Manager - Subscriptions
	Before you can do anything in your Azure account. You'll need to have a subscription. An Azure Account can have multiple subscriptions and the most common three are: 
		Free Trial 
		Pay as you go 
		Azure for Students 
	At the subscription level you'll have the ability to set: 
		Resource Tags
		Access Controls
		Resource Groups
		
		
Azure Resource Manager - Management Groups
	Managing multiple subscriptions (accounts) into a hierarchal structure. 
	Each directory is given a single top level management group called the "root" management group
	All subscriptions within a management group automatically inherit the conditions applied to the management group
	
	
Azure Resource Manager - Resource Groups
	Resource Groups - A container that holds related resources for an Azure solution
	Resource - A manageable item that is available through Azure 
	Resourece Provider - A service that supplies Azure resources
	
	
Azure Resource Manager - Resource Providers
	Resource Providers - In order to use Azure resources you have to register Resourec Providers
	Many Resource Providers are registered by default for you with you Subscription
	You can register resource providers under your subscription
	
	
Azure Resource Manager - Resource Tags
	A tag is a key and value pair that you can assign to azure resources. 
		Tags allow you to organize your resources in the following ways: 
			Resource management 
				Specific workloads, environments eg. Developer environments 
			Cost management and optimization
				Cost tracking, budgets, alerts 
			Operations Managment 
				Business commitments and SLA operations eg. Mission critical services 
			Security 
				Classification of data and security impact
			Governance and regulatory compliance
			Automation
			Workload optimization
			
			
Azure Resource Manager - Resource Locks
	As an admin, you may need to lock a subscription, resource group, or resource to prevent other userse from accidentally deleting or modifying critical resources. 
		In the Azure portal you can set the following lock levels 
			Cannot delete 
				authorized users can still read and modify a resource but they cant delete the resource 
			ReadOnly
				authorized users can read a resource, but they can't delete or update the resources 		
				
				
Azure Resource Manager - Azure Blueprints	
	Azure blueprints enable quick creation of governed subscriptions. 
	Compose artifacts based on common organization-based patterns into re-usable blueprints. 
	The service is designed to help with environment setup
	Blueprints are a declarative way to orchestrate the deployment of various resource templates and other artifacts such as: 
		Role Assignments
		Policy Assignments 
		Azure Resource Manager templates (ARM Templates) 
		Resource Groups
			The Azure Blueprints service is backed by the globally distributed Azure Cosmos DB 
			Blueprint objects are replicated to multiple Azure regions. 
		ARM Templates vs Azure Blueprints 
			Nearly everything that you want to include for deployment in Azure Blueprints can be accomplished with an ARM template
			ARM Template
				ARM templateds are stored either locally or in source control
				There no active connection or relationship to the ARM template 
			Azure Blueprints 
				relationship between the blueprint definition (what should be deployed) and the blueprint assignment (what was deployed) 
		Azure Blueprints supports improved tracking and auditing of deployments 
		
		
ARM Templates - Introduction 
	What is Infrastructure as Code? (IaC) 
		the process of managing and provisioning computer data centers (eg. Azure) through machine-readable definition files (eg. JSON files) rather than physical hardware configuration or interactive configuration tools. 
		You write a script that will setup cloud services for you. 
		IaCs can either be: 
			Declarative - You defined exactly what you want, and you get exactly that
			Imperative - You define what you generally want, and the service will guess what you want. 
	ARM Templates are JSON files that define azure resources you want to provision and azure services you want to configure 
		With ARM templates you can: 
			ARM templates are declarative: (you get exctly what you define)
			stand up, tear down or share entire architectures in minutes
			Reduce configuration mistakes 
			Know exactly what you have defined for a stack to establish an architecture baseline for compliance 
	With ARM templates you can: 
		ARM teplates are declarative. (you get exactly what you define) 
		stand up, tear down or share entire architecture in minutes
		Reduce configuration mistakes 
		Establish an architecture baseline for compliance 
		Modulatrity break up your architecture in multiple files and reuse them
		Extensibility Add Powershell and Bash scripts to your templates 
		Testing you can use the ARM template tool kit (arm-ttk)
		Preview Changes Before you create infrastructure via template, see what it will create
		Built-In Validation will only deploy your template if it passes 
		Tracked Deployments Keep track of changes to architecture over time
		Policy as Code Apply Azure policies to ensure you remain compliant
		Microsoft Blueprints (establishes relationship between resource and the template) 
		CI/CD Integration
		Exportable Code (exporting the current state of resource groups and resources)
		Authoring tools Visual Studio Code has advanced features for authoring ARM templates 
		
		
ARM Templates - Arm Template Skeleton
	Skeleton - the genreal structure of an ARM template 
	$schema - describes the properties that are avaialable within a template. 
	contentVersion - the version of the template. 
		You can provide any value for this element
	apiProfile - Use this value to avoiid having to specify API versions for each resource in the template 
	parameters - values you can pass along to your template 
	variables - you transform parameters or resource properties using function expressions
	Functions - User-defined functions available within template 
	resources - the azure resources you'll want to deploy or update 
	outputs - values that are returned after deployment 
	
	
ARM Templates - ARM Template Resources 
	Resource - An Azure Resource you want to provision
		type - type of the resources
			Follows the format of {ResourceProvider}/ResourceType
		apiVersion - Version of the REST API to use for the resource
			Each resource provider published its own API versions, 
		name - Name of the resource
		location - Most resources have a location property
			The region where the resource will be deployed
		Other Properties - Other properties we can use to configure the resource
		Will vary per resource type
		
		
ARM Templates - Parameters
	Parameters - Allows you to pass variables to your ARM template
	type - the expected data type of the inputed value 
		string,securestring, int, bool, object, securedObject, and array. 
	defaultValue is provided it will be set to this value 
	allowedValues an array of allowed values 
	minValue the minimal possible value
	maxValue the maximum length of characters or array
	minLength the maximum length of characters or array
	maxLength the maximum length of characters or array
	description the dexcription that will be displayed in the Azure Portal
	
	
ARM Templates - ARM Template Functions
	Functions - Allows you to apply transformations to your ARM variables 
		Template Functions - built-in functions 
		Used-Defined Functions - custom functions you create 
		Functions are called using parentheses eg. (): 
	Template Functions 
		Array: array, concat, contains, createaray, empty, first, intedrsection, last, length, min, max, range, skip, take, union
		Comparison: coalesce, equals, less, lessOrQuals, greater, greatOrEquals
		Date: dateTimeAdd, utcNow 
		Deployment: deployment, environment, parameters, variables
		Logical: and, or, if, not
		Numeric: add, copyIndex, div, float, int, min, max, mod, mul, sub
		Object: contains, empty, intersections, json, length, union
		Resource: extensionResourceId, ListAccountSas, listKeys, listSecrets, list*, picZones, providers, reference, resourceGroup, resourceiD, subscription, subscriptionResourceId, tenantResourceId 
		String: base64, base64ToJson, base64ToString, concat, contains, dataUri, DataUriTOString, empty, endsWith, first, format, guid, indexOf, last, lastIndexOf, length, newGuid, padLeft, replace, skip, split startsWith, string, substring, take, toLower, toUpper, trim, uniqueString, uri, uriComponent, uriComponentToString. 
		
		
ARM Templates - ARM Template Variables 
	Nested Variables - You can use json object to have nested variables to scope your variables for multiple use cases. 
	Scoping / Nesting variables based on environment
		"variables": {
		  "environmentSettings": {
		    "test": {
		      "instancesize": "Small", 
		      "instanceCount": 4
		    }
		  }
		}, 
	Using Params to choose the environment
		"parameters": {
		  "environmentName": { 
		    "type": "string", 
		    "allowedValues": [
		      "test", 
		      "prod"
		    ]
		  }
		},
	Referencing nested variables eg Variables()[].property
		"[variables('environmentSettings')[parameters('environmentName')].instanceSize]" 


ARM Templates - ARM Templates Outputs
	Outputs - Returns values from deployed resources, so you can use them programmatically
	You specify the type and value under outputs
		"outputs": { 
		  "resourceID": {
		    "type": "string",
		    "value": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressses_name'))]"
	You can use the Azure API via CLI, Powershell or SDK to fetch outputs 
	
	
Storage Accounts - Introduction to Storage Accounts 
	Azure Storage Accounts - Contains all of your Azure Storage data objects: blobs, files, queues, tables, and disks
	Azure Storage offers several types of stroage accounts. 
	Each with different features and their own pricing models 
		General-purpose v1 (legacy)
		General-purpose v2
		BlobStorage (legacy)
		BlockBlobStorage
		File Stroage
	Storage Accounts vary with the following features: 
		Supported Services (What can I put in this storage account?)
			Blob, File, Queue, Table, Disk, and Data Lake Gen2
		Performance Tiers (how fast will my read and writes be?)
			Standard and Premium
		Access Tiers (how often do I need quick access to files?)
			Hot, Cool, Archive
		Replication (How many redundant copies should be made and where?)
			LRS, GRS, RA-GRS, ZRS, GZRS, RA-GZRS
		Deployment Model (Who should deploy the supported services?)
			Resource Manager, Classic
			
	
Storage Accounts - Storage Comparison
	General-purpose V2 is the most common storage type aside from Blob Storage
Storage Accounts - Core Storage Services
	 Azure has 5 core storage services 
	 	Azure Blob - A massively scalable objecty store for text and binary data.
	 		Also included support for Big Data Analytics through Data Lake Storage Gen 2
	 	Azure Files - Managed file shares for on-premises deployments
	 	Azure Queues - A messaging store for reliable messaging between application components 
	 	Azure Tables - a NoSQL store for schema-less storage of structured data
	 	Azure Disks = Block level storage volumes for Azure VM's 
	 	
	 	
Storage Accounts - Performance Tiers
	Ther are 2 types of performance tiers for storage accounts: Standard and Premium 
		IOPS - stands for input / Output operations per second 
		Premium Performance
			Stored on Solid State Drives 
			Optimize for low latency
			Higher throughput
			use cases: 
				Interactive Workloads
				Analytics
				AI or ML 
				Data Transformation
			An SSD has no moving parts and data is distributed randomly. This is why it can read and write so fast 
		Standard Performance
			Stored on Hard Disk Drives 
			Varied performance based on access tier (Hot, Cool, Archive) 
			Use Cases: 
				Backup and disaster recovery
				Media Content
				Bulk Data Processing
			An HDD has moving parts, an arm that needs to read and write data sequential to a disk. It is very good at writing or reading large amounts of data that is close together. 
			
			
Storage Accounts - Access Tiers
	There are 3 types of access tiers for Standard storage: Cool, Hot and Archive
	Hot 
		Data that's accessed frequently 
		Highest storage cost, lowest access cost 
		Use Case
			Data thats in actvie use or expected to be accessed frequently 
			Data that's staged for processing and eventual migration to the cool access tier
	Cool
		Data that's infrequently accessed and stored for at least 30 days. 
		Lower storage cost, higher access cost
		Use Case: 
			Short-term backup and disaster recovery datasets 
			Older Media content not viewed frequently anymore but is expected to be available immediately when accessed 
			Large datasets that need to be stored cost effectively whie more data is being gathered for future processing. 
	Archive 
		Data that's rarely accessed and stored for at least 180 days
		Lowest storage cost, highest access cost 
		Use Case: 
			Long-term backup, secondary backu, and archival datasets
			Original (raw) data that must be preserved, even after it has been processed into final usable form
	Account level tiering 
		Any blob that doesn't have an explicitely assigned tier infers the tier form the Storage Account access tier setting
	Blob-Level Tiering
		You can upload a blob to the tier of your choice
		Changing tiers happens instantly with the exception from moving out of archive 
	Rehydrating a blob 
		When moving a blob out of archive into another tier it can take several hours. This is known as "rehydrating" 
	Blob Lifecycle Management 
		You cna create rule based policies to transition data to different tiers Eg. After 30 days move to cool storage 
	When a blob is uploaded or moved to another tier It's charged at the new tier's rate immediately upon tier change. 
	When moving from a cooler tier: 
		The operation is billed as a write operation to the destination tier. 
		Where the write operation (per 10,000) and data write (per GB) charges of the destination tier apply 
	When moving from a hotter tier: 
		The operation is billed as a read from the tier source
		Wher the read operation (per 10,000) and data retrieval (per GB) charges of the source tier apply
		Eary deletion charges for any blob moved out of the cool or archive tier may apply as well 
	Cool and archive early deletion
		Any blob that is moved into the cool tier (GPv2 accounts only) is subject to a cool early deletion period of 30 days. 
		Any blob that is moved into the archive tier is subject to an archive early deletion period of 180 days. This charge is prorated. 
		
		
Storage Accounts - Replication Data Redundancy
	When you create a Storage account you need to choose a Replication type
	Replication stores multiple copies of your datra so that it is protected from: 
		planned events 
		transient hardware failures 
		network or power outages 
		massive natural disasters 
	Primary Region Redundancy 
		Locally Redundant Storage (LRS) 
		Zone-Redundant Storage (ZRS) 
	Secondaary Region Redundancy 
		Geo-redundant storage (GRS) 
		Geo-Zone-Redundant Storage (GZRS) 
	Secondary Region Rendundancy with Read Access
		Read-access geo-redundant storage (RA-GRS) 
		Read-access geo-redundant storage (RA-GZRS)
		
		
Storage Accounts - LRS ZRS
	Redundancy in the Primary Region
		Data is replicated 3 times in the primary region
		There are two options for storing in the primary region
			Locally Redundant Storage (LRS)
				Copies data synchronously in primary region
				99.999999999 durability (11 nines)
				Cheapest option
			Zone-Redundant storage (ZRS)
				copies data synchronously across 3 AZs in primary region 
				99.9999999999 (12 9's) durability 
				
				
Storage Accounts - GRS GZRS
	Redundancy in the Secondary Region 
		Replicate to a secnodary region in case of primary regional disaster 
		The secondary region is determined based on your primary's pair region 
		Secondary region isn't available for read or write access (except in event of failover) 
		Geo Redundant Storage (GRS) 
			copies data synchronously 
			copies data asynchronously to another region
			99.99999999999999% (16 9's) of durability
		Geo-Zone-redundant storage (GZRS) 
			copies data synchronously across 3 AZs in a physical region 
			copies data asynchronously to another region
			99.99999999999999% (16 9's) of durability
			
			
Storage Accounts - RA-GRS RA-GZRS
	Redundancy in the Secondary Region with Read Access 
		Data is replicated synchronously to primary region
		Your data will be "in-sync" with your primary and you'll have read access. 
	Read-Access Geo Redundant Storage (RA-GRS) 
		copies data synchronously in primary region
		copies data synchronously to another region 
		99.99999999999999% (16 9's) of durability
	Read-Access Geo-Zone-Redundant storage (GA-GZRS) 
		copies data synchronously across 3 AZs in a physical region
		copies data synchronously to another region
		99.99999999999999% (16 9's) of durability
		
		
Storage Accounts - Introduction to Azure Blob
	Blob storage is an object-store that is optimized for storing massive amounts of unstructured data. 
	Unstructured data is dat taht doesn't adhere to particular data model or definition, such as text or binary data. 
		Azure blobs are composed of the components:
			Storage account 
			FQDN 
			Containers (similar to a folder in a file system) 
			Blobs - the actual data being stored 3
			
			
Storage Accounts - Azure Blob Types 
	Azure Storage supports 3 typs of blobs: 
		Block blobs
			store text and binary data 
			made up of blocks of data that can be managed individually 
			store up to about 4.75 TiB of data 
		Append blobs 
			Optimized for append operations
			Ideal for scenarios such as loggind data from a virtual machine 
		Page blobs 
			store random access files up to 8TB in size 
			store virtual hard drive (VHD) files and serve as disks for Azure virtual machines
			
			
Storage Accounts - Azure Blob Moving Data
	There are multiple ways to move data into Azure Blob Storage 
		AzCopy - Easy to use comand line tool for windows and linux 
		Azure Storage Data Movement library - .NET library (uses AzCopy underneath) 
		Azure Data Factory - (An ETL service by Azure) 
		Blobfuse - Virtual file system driver. access data through linux file system
		Azure Data Box - A rugged device used to physically transport data to Azure 
		Azure Import / Export Service - A service where you ship your physical disks for data transfer onto Azure 
		
		
Storage Accounts - Introduction to Azure Files
	Azure Files is a fully managed file share in the cloud 
	A file share is a centralized server for storage that allows multiple connections. 
		Its like having one big shared drive that everyone (Virtual Machines) can work on at the same time
	To connnect to the file share a network protocol is used: 
		Server Message Block (SMB) 
		Network File System (NFS) 
	When a connection is established the file share's filesystem will be accessible in the specific directory within your own directory tree. This is known as mounting. 
	
	
Storage Accounts - Azure Files Use Cases 
	Use Cases
		Completely replace or supplement on-premises file servers Network Attach Storage (NAS) devices
			Lift-and-Shift means when you move workloads without rearchitecting, eg. importing local VMs to the cloud
			Classic Lift - where both the application and its data are moved to Azure 
			Hybrid Lift - where the application data is moved to Azure Files, and the application continues to run on-premises
		Simplify cloud development
			Shared application settings - Multiple VMs and developer workstations need to access the same config files 
			Diagnostic share - All VMs log to file share, developers can mount and debug all logs in a centralized place
			Dev/Test/Debug - Quickly share tools for developer needed for local environments
		Containerization
			You can use Azure Files to persist volumes for stateful containers
		Why use Azure files instead of setting up your own File server? 
			Shared Access - Already setup to work with standard networking protocols SMB anad NFS 
			Fully Managed - Its kept up to date with security patches, designed to scale
			Scripting and Tooling - You can automate the management and creation of file shared with Azure API Powershell
			Resiliency - Build to be durable and always working  
			
			
Storage Accounts - Azure Files Feature
	Backups 
		You can backup your file share with shared snapshots
			They are read-only 
			Incremental - (they only contain as much data as has chaged since the previous snapshot)
			You can have up to 200 snapshots per file share
			you can retain backups for up to 10 years 
			Backups are stored within your file share (if you delete your file share you will delete your backups)
		Soft Delete 
			You can prevent accidental deletion by turning on Soft Delete (Storage will be marked for deletion and retained for a period of time before final delete occurs
		Advanced Threat Protection
			An additional layer of security intelligence that provides alerts when it detects anomalous activity on your storage account 
		Store Tiers
			Premium - Store on to SSD with single-digit milliseconds for most IO operation
			Transaction Optimized - Store on HDD with transaction heavy workloads that don't need the latency offered by premium file shares (historically this tier has been called standard) 
			Hot - ooptimized for general purpose file sharing scenarios such as team share and Azure File Sync
			Cool - Stored on HDD for cost-efficient storage optimized for online archive storage scenario
	Types of Storage 
		General purpose version 2 (GPv2) - deployed on to HDD
		FileStorage - deployed onto SSD
	Identity 
		On-Premise - Azure Storage can be joined to an on-premise Active Directroy Domain Service
		Managed - Azure Storage can be joined to Microsoft managed active directory domain service 
		Store Account Key - A username (storage account name) and password (account key) can be used to mount 
	Networking 
		Azure Files are accessible inside or outside your AWS Account from anywhere via storage account public endpoint. 
		SMB Connects to port 445, your organization may need to unblock this port so you can mount your file share. 
	Encryption
		Azure Files is encrypted-at-rest using Azure Storage Encryption (SSE) 
		
		
Storage Accounts - Azure File Sync
	Azure File Sync is a service that allows you to cache Azure file shares on an on-premises Windows Server or cloud VM. 
		You can use any protocol that's available on Windows Server to access your data locally, including SMB, NFS, and FTPS
		You can have as many caches as you need across the world
		
		 
Storage Accounts - Azure Storage Explorer
	A standalone app that makes it easy to work with Azure Storage data on Windows, MacOS, and Linux. 
		You can create Blob containers, upload files, create snapshots of Disk, and more. 
		
		
Storage Accounts - AZCopy
	AZCopy is a command-line utility that you can use to copy blobs or files to or from a storage account. 
		Its an executable file you download 
		you will need to have the level of authorization via attached roles
			To download 
				storage blob data reader 
			To upload
				Storage Blob Data Container 
				Storage Blob Data Owner
		You gain access either via 
				Azure Active Directory (AD) 
				Shared Access Signature (SAS) 
		Use the Copy command to upload and download	
		
			
Storage Accounts - Azure Import Export Service
	Used to securely import large amounts of data to Azure Blob storage and Azure Files by shipping disk drives to an Azure DataCenter 
		You have 2 options for shipping drives opn import: 
			Use your own disk drives 
			Use Microsoft provided drives 
				Microsoft ships up to 5 encrypted solid-state disk drives (SSDs) known as Azure Data Box Disks with a 40TB total capacity per order, to your datacenter through a regional carrier. 
			You can quickly configure Azure Data Box Disk drives, copy data to disk drives over USB 3.0 connection, and ship the disk drives back to Azure. 
		To prepare your drive you'll need to use the command-line WAImport Export tool to 
			Prepare your disk drives that are shipped for import. 
			Copying your data to the drive 
			Encrypts the data on the dirve with AES-256 bit Bitlocker. 
			Generate the drive journal files used during import creation
			Helps Identify numbers of drives needed for export jobs 
		There are two versions of WAImportExport 
			Version 1 for import/export into Azure Blob storage. 
			Version 2 for importing data into Azure files
		WAImportExport tool is  only compatible with 64-bit Windows. 
		Once you have prepared your drives and generated a journal file you can create an Import Job
			The journal file stores basic informtion such as: 
				drive serial numbers 
				encryption key
				storage account details
			you'll specify Region and Storage Account 
			You'll provide shipping information
			For expert jobs you can 
				you can only export form Azure Blob 
				you can ship up to 10 empty drives to Azure per job
				You create an export job and the data is loaded onto those drives and shipped back to you  
				
				 
Storage Accounts - SAS
	A shared access signature (SAS) is a URI that grants restricted access rights to Azure Storage resoureces. 
		Share the URI to gratnt clients temporary access to specific set of permissions
	Types of shared access signatures
		Account-level SAS
			access to resources in one or more of the storage services 
		Service-level SAS 
			access to single the storage account by using the storage account key
		User delegation SAS 
			Access to storage account using Azure AD credentials
			Limited only to Blob and Containers 
			Microsoft considers this method best practice for accessing via SAS 
	A shared access signature comes into different formats 
		Ad hoc SAS 
			the start time, expiry time, and permissions are part of the URI 
			Any type of SAS can be an ad hoc SAS 
		Service SAS with stored access policy 
			A stored access policy is defined on a resource container (limited to blob container, table, queue, or file share) 
			The stored access policy can be associated to multiple SAS to manage constraints 
	The URI Format Itself
		Blob URI: https://myaccount.blob.core.windows
		sv (Storage services version) which version of the storage services to use 
		st (start time) the time SAS becomes valid 
		se (Expiration time) the time when the SAS becomes invalid eg. Container (c) or blob (b) 
		sr (Storage Resource) if the resource is a  blob, queue 
		sp (permissions) what operations can be performed against the storage resource eg. Read (r) and Write (w)
		sig (Signature) used to authenticate access to a SHA256 algorithm
		You can generate SAS via 
			Azure SDK 
			Azure Portal 
			
			
Virtual Machines - Introduction 
	Choose an OS, Compute, Memory and Storage and launch a server in minutes 
	Azure Virtual Machines (VMs) is a highly configurable server
	Virtualization let you run a server without having to buy and maintain the physical hardware that runs it
		Virtual Machines still require maintenance such as: 
			applying OS system patches 
			Installing and configuring packages 
		Some things you should know: 
			The size of the virtual machine is determined by the image 
				The image defines the combination of vCPUs, Memory and Storage Capacity
			The current limit on a per subscription basis is 20 VMs per region. 
			Azure VMs are billed at an hourly rate
			A single INstance VMs has an availability of 99.9% (when all storage disks are premium) 
			Two instances deployed in Availability Set will give you 99.95% availability  
			You can attach multiple Managed disk to your Azure VMs
	When you launch an Azure Virtual Mahcine other networking components will be created or associated to your Virtual Machine 
		Network Security Group (NSG) - attached to the NIC, virtual firewall with rules around ports and protocols 
		Network Interface (NIC) - a device that handle ip protocols and network communications
		Virtual Machine Instance - The actual running server 
		Public IP Address - The address that you will use publicly access your VM
		Virtual Network (VNet) - The network where your VM will reside
		
		
Virtual Machines - Operating Systems
	What is an Operating System? 
		The OS is the program that manageds all other programs in a computer 
		The most commonly known operating systems are Windows, macOS and Linux 
		When you launch a Virtual Machine you need to choose an image which has a specific Operating System
	Microsoft works closely with partners to ensure that images available are updated and optimized for an Azure runtime. Most of these images can be found in the Azure Marketplace. 
		SUSE Linux Enterprise Server 
		Red Hat Enterprise Linux
		Ubuntu Server 
		Debian 
		FreeBSD
		Azure Marketplace - Flatcar Container Linux
		RancherOS
		Bitnami Library for Azure 
		Mesosphere DC/OS on Azure 
		Docker Images 
		CloudBees Jenkins Platform
	You can Bring your own linux by creating a Linux Virtual Hard Disk (VHD) 
		(Hyper-V virtual hard disk (VHDX) format isn't supported in Azure, only fixed VHD)
		
		
Virtual Machines - Cloud Init
	Cloud-Init is the industry standard multi-distribution method for cross-platform cloud instance initialization. 
	it is supported across all major public cloud providers, provisioning systems for private cloud infrastructure, and bare-metal installations. 
	What is Cloud Instance Initialization? 
		The process of preparing an instance with configuration data for the operating system and runtime environment. 
			Cloud instances are initialized from a disk image and instance data: 
				Meta-data
				User-data
				Vendor-data
	User Data is a script that you want to run when an instance first boots up. eg. Install Apache web-server
	
	
Virtual Machines - Sizes
	Azure VMs come in a variety of sizes that are also optimized for specific use cases
	Azure VMs are grouped into: 
		Types eg. General Purposes, Compute Optimized
		Sizes eg. B, Dsv3 (also called Series or SKU family)
	General Purpose - Balanced CPU to memory ratio. testing and development, small to medium databases, and low to medium traffic web servers 
		SKU's - B, Dsv3, Dasv4, Dav4, DSv2, Dv2, Av2, DC, DCv2, Dv4, Ddv4, Ddsv4
	Compute Optimized - High CPU to memory ratio. Good for medium traffic web servers, network appliances, batch processes, and app servers
		SKU's - F, Fs, Fsv2
	Memory Optimized - High memory to CPU ratio. Great for relational database servers, medium to large caches, and in-memory analytics. 
		SKU's - Esv3, Ev3, Easv4, Eav4, Ev4, Esv4, Edv4, Edsv4, Mv2, M, DSv2, Dv2
	Storage Optimized - High disk througput and IO ideal for Big Data, SQL, NoSQL Databases, data waerhousing, and large transactional databases 
		SKU's - Lsv2
	GPU - Specialized VMs for heavy graphic rendering and video editing, model training and inferencing (ND) with deep learning. 
		Available with single or multigpu's 
		SKU's - NC, NCv2, NCv3, NCasT4_v3 (Preview), ND, NDv2 (Preview), NV, NVv3 NVv4
	High performance compute - Our fastest and most powerful CPU virtual machines with optional high-througput network interfaces (RDMA) 
		SKU's - HB, HBv2, HC, H 
	The type of image may limit you to specific VM sizes 
	You can explore sizes and then sort and filter based on a variety of options such as cost
	
		
Virtual Machines - ACUs
	Azure Compute Unit (ACU) provides a way of comparing compute (CPU) performace across Azure SKU's 
	ACU is currently standardized on a Small (Standard_A1) VM with the value of 100
	All other SKU's then represent approximately how much faster SKU can run a standard benchmark
	
	
Virtual Machines - MobileApp
	You can install the Azure Mobile App, and you can monitor your VMs on the go. 
	
	
Virtual Machines - VM Generations
	Hyper-V is Microsoft's hardware virtualization product. 
	It lets you create and run a software version of a computer, called a virtual machine
	Each virtual machine acts like a complete computer, running an opertating system and programs. 
		Hyper-V is just like Virtual Box
	There are two generations of Hyper-V VMs:
	Generation 1 - support most guest operating systems
	Generation 2 - support most 64-bit version of Windows and more current versions of Linux and FreeBSD operating systems
		Azure has Generation 1 and Generation 2 VMs which are similar but not exactly the same as Hyper-V Generations
	The most important difference between Azure Gen 1 and Gen 2:
		Gen 1:
			BIOS-based architecture 
		Gen 2: 
			UEFI-based boot architecture (improved boot and installation times)
			Secure Boot verifies the boot loader is signed by a trusted authority
			Larger boot volume up to 64 TB
			Hyper-V VMs are packaged into Virtual Hard Disk Formats: VHD or VHDX files 
		
		
Virtual Machines - 3 Ways to Connect
	There are 3 ways to connecct to your Virtual Machines
		Secure Shell (SSH) is a protocol to establish a secure connection between a client and a server. 
			This is how you can remotely connect to your Azure VM via terminal
			SSH happens on Port 22 via TCP
		Remote Desktop Protocol (RDP) is a proprietary protocol developed by Microsoft which provides a user with a graphical interface to connect to another computer over a network connection
			This is how you can remotely connect to a Windows Server via Visual Desktop 
			RDP happens on Port 3389 via TCP and UDP 
		Bastion
		Azure Bastion is a service you deploy that lets you connect to a virtual machine using your browser and the Azure Portal. 
		It provides secure and seamless RDP/SSH connectivity to your virtual machines directly from the Azure portal over TSL 
		A bastion is a hardened instance that is monitored. Users connect to this VM which then establishes a connection to the target instance. Sometimes known as a jump box since you have one extra security step. 
		
		
Virtual Machines - SSH
	It is a very common to use SSH key pairs as a means to authenticate to your VMs. 
	SSH Key Pairs is when you generate out two keys: 
		A private key
		A Public Key
	The private key should remain on your local system and not be shared with others. 
	The public key is stored on the VM. 
	When you go to SSH you provide your private key and its matched against the public key to authenticate you. 
	
	Example: ssh -i ~/.ssh/id_rsa.pub azureuser@10.111.12.123
	
	
Virtual Machines - RDP
	In order to RDP into your Windows Server you'll need to download the RDP file. 
	The Remote Desktop Client is already installed in Windows 10. 
	If you are macOS you can download the Microsoft Remote Desktop from the Apple Store. 
		Once you open the RDP file you will use the Username and Password during the creation of your VM in the Azure Portal
		
		
Virtual Machines - Bastion
	Azure Bastion is an intermediate harden instance you can use to connect to your target server via SSH or RDP
	It will provision a Web based RDP client or SSH Terminal
	Some devices cannot run an RDP CLient such as Google Chromebook and so Azure Bastion is one of the only ways to allow you to do that
		When you create an Azure Bastion 
		You need to add a Subnet to your VNet called AzureBastionSubnet with at least a size of /27 (32 addresses)
	If you have a Windows Server which requires RDP, and have a Bastion in the same VNet 
	You just enter in your username and password as you normally would
	If you have a Linux server you can SSH with the Bastion 
	You can use SSH Private Keyh or Password that you set when you created your VM
	
	
Virtual Machines - Windows Vs Linux
	You can launch both Windows and Linux services on Azure VMs
		Windows 
			You need to Windows License (or your Windows account with by unactivated)
			You can bring your own license via Hybrid License
			you can set a username and password
			you have to use a much larger instance to run Windows at least a B2
			It's a full desktop environment
		Linux
			Most versions of Linux require no type of license
			You can set either a username and password or create an ssh-key pair 
			You can utilize smaller VM sizes because you're not running a full desktop experience
			Unix and Linux based system traditionally are terminal based environments 
			
			
Virtual Machines - Update Management 
	Update Management allows you to manage and install operating systems updates and patches for both Windows and Linux virtual machines that are deployed in Azure, on-premises, or in other cloud providers
	When you launch an azure vm you can go to Operations and turn on Guest + Host Updates. This will install the Microsoft Monitoring Agent (MMA) that will install the Microsoft Monitoring Agent (MMA) that will be used to monitor your instances
	Azure Automations is the underlying service that is installed the agent 
	Update Management will perform a scan for update compliance
	A compliance scan is by default, performed every 12 hours on a Windows and every 3 hours on a Linux 
	It can take between 30 minutes and 6 hours for the dashboard to display updated data from managed computers. 
		In Azure Automation, you can enable the Update Management, Change Tracking and Inventory, and Start/Stop VMs during off-hours features for your servers and virtual machines. These features have a dependency on a Log Analytics workspace, and therefor require linking the workspace with an Automation account. 
		
Azure Disks - Introduction
	A virtual hard drive in the cloud 
	Block-level storage volumes for SSD and HDD
	Azure Managed Disks are block-klevel storage volumes that are managed by Azure and used with Azure VMs
		Managed disks are like a physical disk in an on-premises server but, virtualized
		You specify the size, type and other configurations without worrying about underlying hardware 
	Managed disks are designed for 99.999% availability 
	Azure creates three replicas of your data, allowing for high durability 
	You can create up to 50,000 VM disks fo a type in a subscription per region 
	Allowing you to create up to 1000 VMs in a virtual machine scale set using a marketplace image 
	Managed disks are integrated with availability sets
	Managed disks support Availability Zones 
	Azure Backup can be used to create a backup job with time-based bacups and backup retention policies 
	you can use Azure role-based access control (RBAC) to assign specific permissions for a managed disk to one or more users 
	You can directly import your Virtual Hard drive Disks (VHD) into Azure Disks 
	You can use Azure Private links to ensure traffic between Azure Disks and VMs stay within the Microsoft network 
	
	
Azure Disks - Encryption
	Azure Managed Disks supports 2 types of encryption: 
		Server Side Encryption (SSE) 
		Azure Disk Encryption (ADE)
	Server Side Encryption (SSE)
		Provides encryption-at-rest and safeguards your data to meet your organizational security and compliance commitments. 
		enabled by default for all managed disks, snapshots, and images
		Temporary disk are not encrypted by server-side encryption unless you enable encryption at host
		Keys can be managed two ways: 
			Platform-managed keys - Azure manages your keys 
			Customer-Managed keys - You manage your keys 
	Azure Disk Encryption (ADE) 
		Allows you to encrypt the OS and Data disks by an IaaS Virtual Machine 
			For Windows encryption done by bitlocker 
			For Linux encryption is done by DM-Crypt
			
			
Azure Disks - Disk Roles
	There are 3 main disk roles in Azure, the data disk, the OS disk, the temporary disk 
		Data disk 
			a managed disk that's attached to a virtual machine to store application data, or other data you need to keep 
			registered as SCSI drives and are labeled with a letter you choose 
			has a maximum capacity of 32767 gibibytes (GiB)
			The size of a VM determines how many disks you can attach to the type of storage you can use
		OS Disk 
			Every virtual machine has one attaached operating system disk 
			That OS disk has a pre-installed OS, which was selected when the VM was created 
			This disk contains the boot volume
			This disk has a maximum capacity of 4095GB
		Temporary Disk 
			Most VMs contain a temporary disk, which is not a managed disk. 
			provides short-term storage for applications and processes, and is intended to only store data such as page or swap files. 
			Data on the temporary disk may be lost during a maintenance event  or when you redeploy a VM 
			During a succesful standard reboot of the VM, data on the temporary disk will persist 
			The temporary disk is typically /dev/sdb on Linux and Windows VMs the temporary disk is D: by default 
			not encryptedby SSE unless you enable encryption at host. 
			
			
Azure Disks - Managed Disk Snapshots Managed Custom Image
	A managed disk snapshot is a read-only crash-consistent full copy of a managed disk that is stored as a standard managed disk by default 
	Snapshots are point in time recovery 
	Snapshots exist independant of the source disk and can be used to create new managed disks 
	Snapshots are billed based on the used size. (if you have a 64 GB drive and only use 10 GB you're only being billed the 10GB) 
	You can see the used size of your snapshots by looking at the Azure usage report. 
		A managed custom image allows you to create an image (a copy) of your disk from your VM
		This images contains all managed Disks associated with a VM, including both the OS and data disks. 
	A snapshot doesn't have awareness of any disk execept the one it contains 
	This makes it problematic to use in scenarios that require the coordination of multiple disks, such as striping 
	Snapshots would need to be able to coordinate with each other and this is currently not supported. 
	This is where you would want to use a Managed Custom Image. 
	
	
Azure Disks - Disk Types
	Azure offers 4 tiers of disks: 
		Ultra Disks 
			deliver high speed, high IOPS, and low latency disk storage for Azure VMs
			dynamically change the performace of the disk, without the need to restart your VM
			suited for a data-intensive workloads susch as SAP HANA, top tier databases, and transation-heavy workloads 
			can only be used as data disks (use a Premium SSD for OS Disk) 
			Only supported with very specific VM series 
		Premium SSD 
			high-performance and low-latency disk support for Azure VMs with input/output (IO) intensive workloads 
			suitable for mission-critical produciton applications 
			only be used with VM series that are premium storage compatible 
			Guaranteed IOPS, and throughput fo that disk (Standard tiers don't have IOPS guarantees) 
			designed to provide low single digit millisecond latencies and target IOPS and throughput described in the preceding table 99.9% of the time 
		Standard SSD
			cost effective storage option optimized for workloads that need consistent performance at lower IOPS levels 
			Compared to standard HDDs, standard SSDs deliver better availability, consistency, reliability, and latency.
			Suitable for Web servers, low IOPS application servers, lightly used enterprise applications, and Dev/Test workloads
    designed to provide single-digit millisecond latencies and the IOPS and throughput up to the limits described in the preceding table 99% of the time
			IOPS and throughput may vary sometimes depending on the traffic patterns
			Available on all Azure VMs 
		Standard HDD
			reliable, low cost disk support for VMs running latency inseensitive workloads 
			available on all Azure VMs
			Latency, IOPS and throughput of standard HDD disks may vary more widely as compared to SSD-bassed disks 
			designed to deliver write latencies under 10ms and read latencies under 20ms for most IO operation. 
			Available ina ll Azure regions and can be used with Azure VMs 
		
Azure Disks - Bursting
	Disk Bursting is the ability to boost disk storage IOPS and MB/s performance for a period of time on both VMs and disks.
	Bursting allows you to handle unexpected disk traffic.
	This allows you to get more use out of your disk, avoid permanently upgrading to a more performance disk.
	Bursting on Disks and VMs are independent of one another.
	If you have a bursting disk you don’t need a bursting VM.
	Burstable VMs
		Lsv2 series (All Regions)
		Ds3 series (West Central US)
		Esv3 series (West Central US) 
	Bursting is enabled by default for virtual machines that support it.	
	Burstable Disk
		Premium SSDs for disk sizes P20 and smaller  (All Regions) 
	Bursting is enabled by default for disks that support it. 
	
	
Azure Application Gateway - Introduction to Application Gateway
	Azure Application Gateway is aplication-level routing and load balancing service. 
		Application Gateway operates on OSI layer 7 also known as the application layer 
		Aplication Gateway understandhow to work with HTTP/S requests 
		Advanced routing rules based on the contents of a request 
		Azure Web Application Firewall (WAF) poloicies can be attached to an Application Gateway to provide additional security. 
		You need to configure a Frontends 
			Private IP will create an internal load balancer 
			Public IP will create a Public/ External load balancer 
			You need to configure a Backend
		You'll need to create backend pools 
			A backend pool is a collection of resources to which your application gateway can send traffic 
			A backend pool can contain: 
				virtual machines 
				virtual machines scale sets 
				IP addresses 
				domain names 
				App services 
		You need to configure Routing Rules 
			Listeners list to incoming traffic and passes it to rules 
			Rules say who should we pass data to 
			HTTP/S settings say how we should handle HTTP requests 
			
			
Azure Application Gateway - Routing Rules
	Listeners 
	A listener "listens" on a specified port and IP address for traffic that uses a specified protocol 
	If the listener criteria are met, the application gateway will apply the routing rule 
		There are 2 types of listeners: 
			Basic - forward all requests for any domain to backend pools 
			Multi site - forward requests to different backend pools based on host reader and host name 
			requests are matched according to the order of the rules and the type of listener 
				Add your basic listeners last otherwise it will capture all requests 
	Backend targets
		Chooses where a route should go either Backend Pool or Redirection 
	HTTP Settings 
		To create a rule for Backend Pool you need to create HTTP Setting. 
		This allows to define how we want to handle cookies, connection draining, port request time out and more 
	Backend Port 
		the port where the back-end servers listen to incoming traffic 
	Cookie-Based affinity 
		Use cookies to keep a user session on the same server 
	Connection draining
		gracefully remove backend pool members during planned service updates 
	Request Timeouts 
		the number of seconds that the application gateway will wait to receive a response from the backend pool before it returns a "connection timed out" error message 
	Override backend path 
		allows you to override the path in the URL so that the requests for a specific path can be routed to another path 
	Override Hostname
		Multi-tenant services like App service or API management rely on a specific host header or SNI extension to resolve the correct endpoint. Change these settings to overwrite the incoming HTTP host header 
		
		
Scale Sets - Introduction to Scale Sets
	Azure Scale Sets allows you to automatically increase or decrease your VM capacity
		Create Scaling Policies to automatically add or remove based on Host Metrics 
		Create Health Checks and set Repair Policy to replace unhealthy instances 
		Associate A Load Balancer to distribute BMs across AZs 
		You can scale to 100s or even 1000s of VMs using scale sets 
		A scale set is a group of identical VMs (same image and size) 
		
		
Scale Sets - Associate a Load Balancer
	A Load Balancer can be associated with a Scale Sets 
	This will allow you to: 	
		evenly distribute your VMs across multiple Availability Zones to make your application highly available 
		Use Load Balancer probe checks for more robust Health Checks 
	you have the choice between 2 different load balancers: 
		Application Gateway is an HTTP/HTTPS web traffic load balancer with URL-based routing, SSLL termination, session persistence, and web application firewall. 
		Azure Load Balancer supports all TCP/UDP network traffic, port-forwarding, and outbound flows. 
		
		
Scale Sets - Scaling Policy
	A Scaling Policy determines when a VMs should be added or removed to meet current capacity requirements
	Scale Out
	When a instance should be added to the Scale Set to increase capacity
		eg. When CPU Threshold (%) greater than X for Y minutes add X servers
	Scale In
		When a instance should be removed to the Scale Set to decrease capacity
		eg. When CPU Threshold (%) less than X for Y minutes add X servers
		When you are creating a Scale Set you have very limited options for your Scaling Policy
	After you create your ScaleSet you have a-lot more options available to configure the rules of your Scaling Policy
	Built-in Host-based metrics:
		Percentage CPU
		Network In
		Network Out
		Disk Read Bytes
		Disk Write Bytes
		Disk Read Operations/Sec
		Disk Write Operations/Sec
		CPU Credits Remaining
		CPU Credits Consumed 
	Aggregates
		Average
		Minimum
		Maximum
		Total
		Last
		Count 
	Operators
		Greater than
		Greater than or equal to
		Less than
		Less than or equal to
		Equal to
		Not equal to 
	Actions
		Increase count by X
		Increase percent by X%
		Increase count to X
		Decrease count by X
		Decrease percent by X%
		Decrease count to X 
	If you want more metrics there are 2 ways to collect more information:
	App Insights installs a small instrumentation package in your application that monitors the app and sends telemetry to Azure.
	When you want application metrics: Page load performance, Session counts 
	Azure Diagnostic extension is an agent that runs inside a VM instance. It monitors and saves performance metrics to Azure storage so you can collect more detailed information
	When you want more detailed Host-based metrics 
	Scale-In Policy is what determines what VM is removed (deleted) to decrease the capacity of the Scale Set
	Default
		Delete the VM with the highest Instance ID
		Balanced across Availability Zones (AZs) and Fault Domains (ADs) 
	Newest VM
		Delete the newest created VM
		Balanced across Availability Zones (AZs) 
	Oldest VM
		Delete the oldest VM
		Balanced across Availability Zones (AZs) 
	Update Policy determine how VM instances are brought up-to-date with the latest scale set model
		Automatic
			Increasing with start upgrading immediately in random order 
		Manual
			Existing instances must be manually upgraded 

		Rolling
			Upgrades roll out in batches with optional pause 
	Automatic OS upgrades can be enabled helps to ease update management by safely and automatically upgrading the OS disk for all instances
	
	
Scale Sets - Health Monitoring
	Health monitoring can be enabled to determine if your server is healthy or unhealthy 
	There are 2 modes of health monitoring
		Application health extension
			Ping an HTTP request to a specific path and except a status 200 
		Load balancer Probe
			Allow you to check based on TCP, UDP, or HTTP requests 
	Automatic repair policy 
		If an instance is found to be unhealthy the delete it and launch a new instance 
		
		
Scale Sets - Advanced Features 
	Allocation Policy 
		By default Scaling sets are limited to 100 instances 
		You can go beyond 100 (up to 1000 instances) 
	Proximity placement groups allow you to group Azure resources physically closer together in the same region
	by default a scale set has a single placement that hold up to 100 VMs
	If a scale set property called singlePlacementGroup is set to false, then the scale set can be composed of multiple placement groups and has a range of 0-1000 VMs 


Azure App Services - Introduction to Azure App Services 
	Azure App Service - Quickly deploy and manage Web Apps on Azure without worrying about the underlying infrastructure 
	Azure App Service is an HTTP-based service for hosting web applications, REST APIs, and mobile backends 
	you can choose your programming language and either a Windows or Linux Environment 
		It is a Platform as a Service, so it's the Heroku equivalent for Azure. 
	Azure App Services take scare of the following underlying infrastructure: 
		Security patches for OS and languages 
		Load balancing 
		Autoscaling
		Automated manager
	Azure App Service makes it easy to implement common integrations and featurs such as: 
		Azure DevOps (for deployments) 
		Github integration
		Docker Hub Integration
		Package Managment
		Easy to setup staging environments 
		Custom Domains 
		Attaching TLS/ SSL certificates 
	you pay based on an Azure App Service Plan: 
		Shared Tier - Free, Shared (Linux not supported) 
		Dedicated Tier - Basic, Standard, Premium, PremiumV2, PremiumV3
		Isolated Tier - Azure App Services can also run docker single or multi-containers
	When you create your app you have to choose a unique name since it becomes a fully qualified domain 


Azure App Services - Runtimes
	What is a Runtime Environment?
		A runtime software/ instructions that are executed while your program is running. 
		A runtime generally means what programming language and libraries and framework you are using. 
	A runtime for Azure App Services will be a pre-defilned container that has your programming language and commonly used library for that language installed. 
		With Azure App Services you choose a runtime 
			.NET 
			.NET Core
			Java
			Ruby
			Node.js
			PHP
			Python
		Azure App services will have generally multiple latest verisons of a programming language eg. Ruby 2.6, 2.7
		Its common for a cloud provider to stop supporting older versions so you keep current and forces customer to keep good security practices by having latest patches. 

	 
Azure App Services - Custom Containers
	Azure App Service allows you defined custom containers for Windows or Linux
	You might want to create your own custom container to use a different runtime or bundle in packages or software 
		Create your own Docker Container on your local environment 
		Push the Docker container to Azure Container Registry
		Deploy your Container Image to App Service


Azure App Services - Deployment Slots
	Deployments Slots allow you to create different environments of your web-application associated to a different hostname. This is useful when need a staging, QA environment. 
	Think of it as a way to quickly clone your production environment for other uses. 
	You can also Swap enviroments this could be how you perform a Blue/Green Deploy. 
	you can promote our staging to production by swapping, if something goes wrong you could swap them back. 


Azure App Services - App Service Environment
	App Services Environment (ASE) is an Azure App Service feature that provides a fully isolated and dedicated environment for securely running App Service apps at high scale
		This allows you to host: 
			Windows web apps 
			Linux web apps 
			Docker containers 
			Mobile Apps
			Functions
		App Service Environments (ASEs) are appropriate for applicatoin workloads that require: 
			Very high scale
			Isolation and secure network access
			High memory utilization
	Customers can create multiple ASEs within a single Azure region or across multiple Azure Regions making ASEs ideal for horizontally scaling stateless application tiers in support of high request per second (RPS) workloads. 
		ASE comes with its own pricing tier (Isolated Tier) 
		ASEs can be used to configure security architecture 
		Apps running on ASEs can have their access gated by upstream devices, such as web application firewalls (WAFs)
		App Service Environments can be deployed into Availability Azones (AZ) using zone pinning
			There are 2 deployment types for an App Service environement (ASE):
				External ASE 
				ILB ASE
			External ASE exposes the ASE-hosted apps on an internet-accessible IP address
			ILB ASE exposes the ASE-hosted apps on an IP address inside your VNET. 
			The internal endpoint is an internal load balancer (ILB)


Azure App Services - Deployment
	What is Deployment? 
		The action of pushing changes or updates from a local environment or repository into a remote environment
	Azure App Services provides many ways to deploy your applications: 
		Run from Package 
		Deploy ZIP or WAR (Uses Kudu) 
		Deploy via FTP 
		Deploy via cloud sync (Dropbox or One Drive) 
		Deploy Continuously (GitHub, BitBucket, and Azure Repos) uses Kudu and Azure Pipelines
		Deploy using a custom container CI/CD pipeline (Deploy for Docker Hub or Azure Container Registry) 
		Deploy from local Git (Kudu build server) 
		Deploy using Github Actions
		Deploy using Github actions containers
		Deploy with template (ARM templates)
	Run from a package is when the files in the package are not copied to the wwwroot directory. 
	Instead, the ZIP package itself gets mounted directly as the read-only  wwwroot directory 
	All other deployment methods in App Service have deployed to the following directory: 
		(Windows) D:\home\site\wwwroot
		(Linux) /home/site/wwwroot
		Since the same diredctory is used by your app at runtime, it's possible for deployment to fail because of the file lock conflicts, and for the app to behave unpredictably because some fo the files are not yet updated 
	ZIP and WAR file deployment uses the same Kudu service that powers continuous integration-based deployments. 
		Kudu is the engine behind git deployments in Azure App Service. 
		It's an open-source project that can also run outside of Azure. 
	Kudu supports the following functionality for ZIP file deployment: 
		Deletion of files left over from a previous deployment 
		Option to turn on the default build process, which includes package restore
		Deployment customization, including running deployment scripts 
		Deployment logs 
		A file size limit of 2048 MB 
	You can deploy using Azure CLI 
	Azure API via REST (cURL) 
	Azure Portal 
	You can use (File Transfer Protocol) FTP protocol to upload files. 
	You will need your own FTP client. You just drag and upload your files. 
	Go to Deployment Center
	You can use Dropbox or OneDrive to deploiy using a cloud sync
	You go to Deployment Center, configure for Dropbox or OneDrive. 
	When you turn on Sync it will create a folder in your drop cloud drive: 
		OneDrive: Apps\Azure Web Apps 
		Dropbox: Apps\Azure 
	This will sync with your /home/site/wwwroot, so you just update files in that order. 
	
	
Azure App Services - Azure App Service Plan
	Azure App Service Plan defines how you pay and what resources are available to you.
	There are 3 pricing tiers for App Service Plan:
	Shared Tiers
	There are 2 shared: Free, Shared
		Free Tier provides:
			1 GB of disk space
			Up to 10 apps on a single shared instance
			No SLA for availability
			Each app has a compute quota of 60 minutes per day 
		Shared Tier provides
			Up to 100 apps on a single shared instance
			No SLA for availability
			Each app has a compute quota of 240 minutes per day 
		Shared Tiers does not support Linux-based instances
	Dedicated Tiers
		Basic, Standard, Premium, PremiumV2, PremiumV3
		Basic
			More disk space
			Unlimited apps
			3 levels in this tier that offer varying amounts of compute power, memory, and disk storage 
		Standard
			scale out to three dedicated instances (Can scale up to 10 dedicated instances depending on the price tier)
			SLA of 99.95% availability
			3 levels in this tier that offer varying amounts of compute power, memory, and disk storage  
		Premium
			Scale to 10 dedicated instances (Can scale up to 30 dedicated instances depending on the price tier)
			Availability SLA of 99.95%
			Multiple levels of hardware 
		Isolated Tier
			Dedicated Azure virtual network
    			Full network and compute isolation
    			Scale out to 100 instances
			Availability SLA of 99.95%
			
			 
Azure App Services - WebJobs
	WebJobs is a feature of Azure App Service that enables you to run a program or script in the same instance as a web app, API app, or mobile app.
	There is no additional cost to use WebJobs.
	WebJobs is not yet supported for App Service on Linux.
	The following file types are supported:
		.cmd, .bat, .exe (using Windows cmd)
		.ps1 (using PowerShell)
		.sh (using Bash)
		.php (using PHP)
		.py (using Python)
		.js (using Node.js)
		.jar (using Java) 
	WebJobs Types
		Continuous — run continually until stopped
			Supports debugging 
		Triggered —  run only when triggered
			(expose a webhook that can be called to enable scenarios like scheduling)
			Doesn’t support debugging 
	WebJobs Scale (Only for Continuous)
	Multi Instance —  will scale your WebJob across all instances of your App Service plan
	Single Instance —  will only keep a single copy of your WebJob running regardless of App Service plan instance count 
	
	
Azure Monitor - Introduction to Azure Monitor 
	Azure Monitor comprehensive solution for collecting, analyzing, and acting on telemetry from your cloud and on-premises environments
		Create Visual Dashboards
		Smart Alerts
		Automated Actions
		Log Monitoring 
	Many Azure services by default are already sending telemetry data to Azure Monitor
	

Azure Monitor - The Pillars of Observability 
	What is Observability?
		The ability to measure and understand how internal systems work in order to answer questions regarding performance, tolerance, security and faults with a system/application.
		To obtain observability you need to use Metrics, Logs and Traces.
		You have to use them together, using them in isolate does not gain you observability
	Metrics
		A number that is measured over a period of time
			eg. If we measured the CPU usage and aggerated it over a period of time we could have an Average CPU metric
	Logs
		A text file where each line contains event data about what happened at a certain time.
	Traces
		A history of requests that travels through multiple Apps/services so we can pinpoint performance or failure.		


Azure Monitor - Anatomy of Azure Monitor
	The sources of common monitoring data to populate datastores Order by (Highest to Lowest)
		Application
		Operating System
		Azure Resources
		Azure Subscription
		Azure Tenant
		Custom Sources
		The functions that Azure monitor can perform
		The two fundamental data stores are Metrics and Logs


Azure Monitor - Sources 
	Application Code: performance and functionality of application and code.
		Performance traces, application logs, and user telemetry.
		You need to install Instrumentation Package to collect data for Application Insights.
		Availability Tests responsiveness of your application from different locations on the public Internet.
		Metrics describing the performance and operation and custom metrics for your application.
		Logs store operational data about your application including page views, application requests, exceptions, and traces.
		Send application data to Azure Storage for archiving.
		Details of availability test stored.
		Debug snapshot data that is captured for a subset of exceptions is stored in Azure Storage. 


Azure Monitor - Sources Operation System
	Log Analytics Agent is installed for comprehensive monitoring
	Dependency Agent collects discovered data about processes running on the virtual machine and external process dependencies
	Agents can be installed on the OS for VMs running in Azure, On-premise or another cloud provider 
		Diagnostics Extension collect performance counters store in Metrics
		Application Insights Logs collect logs and performance counters from the compute resource supporting your application to be analyzed with other application data
		Azure diagnostics extension always writes to an Azure Storage account.
	Azure Monitor for VMs uses the Log Analytics agent to store heath state information in a custom location. 
	Diagnostics Extension to stream the data to other locations using Event Hubs


Azure Monitor - Sources Azure Resources 
	Resource Logs
		Resource logs provide insights into the internal operation of an Azure resource.
		Resource logs are created automatically
		You must create a diagnostic setting to specify a destination for them to collected for each resource 
	Platform metrics will write to the Azure Monitor metrics database with no configuration. 
	Access platform metrics from Metrics Explorer.
	Trending and other analysis using Log Analytics
	Copy platform metrics to Logs
	Send resource logs to Azure Storage for archiving.
	Stream metrics to other locations using Event Hubs


Azure Monitor - Source Azure Subscription
	Azure subscription: Telemetry related to the health and operation of your Azure subscription
	Azure Service Health provides information about the health of the Azure services in your subscription that your application and resources rely on.


Azure Monitor - Sources Azure Tenant
	Telemetry related to your Azure tenant is collected from tenant-wide services such as Azure Active Directory.
	Azure Active Directory reporting contains the history of sign-in activity and audit trail of changes made within a particular tenant.


Azure Monitor - Sources Custom Sources 
	You may need to monitor other resources that have telemetry that can't be collected with the other data sources.
	For these resources, write this data to either Metrics or Logs using an Azure Monitor API.
	Collect log data from any REST client and store in Log Analytics and Azure Monitor metrics database


Azure Monitor - Data Stores
	Azure Monitor collects two fundamental types of data from sources: Logs and Metrics

Azure Monitor Logs
	collects and organizes log and performance data from monitored resources
	data logs are consolidated from different sources into workspaces
		platform logs from Azure services,
		log and performance data from virtual machines agents,
		usage and performance data from applications can be consolidated
		In a workspace so they can be analyzed together using a sophisticated query language capable of analyzing millions of records. 
		Work with log queries and their results interactively using Log Analytics 
	Azure Monitor Metrics
		collects numeric data from monitored resources into a time series database.
		Metrics are numerical values collected at regular intervals and describe some aspect of a system at a particular time
		lightweight and capable of supporting near real-time scenarios, useful for alerting and fast detection of issues
		You can analyze them interactively with Metrics Explorer 
    
    
Azure Monitor - Log Analytics Workspaces 
	Log Analytics workspace is a unique environment for Azure Monitor log data
	Each workspace has its own data repository and configuration, and data sources and solutions are configured to store their data in a particular workspace


Azure Monitor - Log Analytics 
	Log Analytics is a tool in the Azure portal used to edit and run log queries with data in Azure Monitor Logs.
	Log Analytics uses a query language called KQL


Azure Monitor - Kusto 
	Azure Monitor Logs is based on Azure Data Explorer, and log queries are written using the same Kusto query language (KQL)
	KQL can be used in:
		Log Analytics
		Log alert rules
		Workbooks
		Azure Dashboards
		Logic Apps
		PowerShell
		Azure Monitor Logs API 
	Kusto is based on relational database management systems and supports entities such as databases, tables, and columns.
	Some query operators include
		calculated columns
		searching and filtering on rows
		group by-aggregates
		join functions 
	Kusto queries execute in the context of some Kusto database that is attached to a Kusto cluster.


Azure Monitor - Kusto Entities 
	Kusto is generally composed of the following entities: Clusters, Databases, Tables, Columns, Functions
	Clusters are entities that hold databases
	Databases are named entities that hold tables and stored functions
	Tables are named entities that hold data. A table has an ordered set of columns, and zero or more rows of data, each row holding one data value for each of the columns of the table
	Columns are named entities that have a scalar data type. Columns are referenced in the query relative to the tabular data stream that is in the context of the specific operator referencing them.
	Stored functions are named entities that allow the reuse of Kusto queries or query parts.
	External tables are entities that reference data stored outside the Kusto database.
	External tables are used for exporting data from Kusto to external storage as well as for querying external data without ingesting it into Kusto.


Azure Monitor - Scalar Data Types
	What are Scalars?
	Scalars are quantities that are fully described by a magnitude (or numerical value) alone
	What are Data Types?
	A data type defines how a piece of data is interpreted
		eg. An Integer number could be a datatype
	In Kusto, data types are used for various things: - columns can have defined data type, - Function parameters expect specific data types and there are
		bool, Boolean represents a true or false value
		datetime, date represents a date and/or time eg. 2015-12-31 23:59:59.9 Time is always stored in UTC timezone
		decimal represents a 128-bit wide, decimal number eg. 12.88
		Int represents a signed, 32-bit wide, integer eg. 5
		long represents a signed, 64-bit wide, integer
		guid, uuid, uniqueid represents a 128-bit globally-unique value eg. 74be27de-1e4e-49d9-b579-fe0b331d3642
		real represents a 64-bit wide, double-precision, floating-point number
		string represents a Unicode string. Kusto strings are encoded in UTF-8 and by default are limited to 1MB eg. “hello world”
		Timespan represents a time interval eg. 2d = 2 days, 30m = 30 minutes, 1tick = 100 nano seconds
		Dynamic A special datatype that can be:
			Accept primitive scalar data type eg. bool, datetime, guid, int, long, real, string, timespan
			Be an array of data types eg. [1,2,3,”hello”]
			Be a property bag of data types {"a":1, "b":{"a":2}} 
		Null is special value that represents a missing value. Any Datatype can hold a value of null 


Azure Monitor - Control Commands 
	Control commands can modify data and metadata and has its own syntax different from KQL.
	The following control command creates a new Kusto table with two columns
	A very common control command is “.show” for example, this will count all tables 


Azure Monitor - Functions
	Functions are reusable queries or query parts. Kusto supports several kinds of functions:
	Stored functions, which are user-defined functions that are stored and managed by one kind of database's schema entities.
	User-defined function belongs to one of two categories:
		Scalar functions (input scalar datatypes, and outputs scalar datatypes)
		Tabular functions (in tabular data, and outputs tabular data) 
	Query-defined functions, which are user-defined functions that are defined and used within the scope of a single query. 
	Built-in functions, which are hard-coded (defined by Kusto and cannot be modified by users)
		Special functions selects Kusto entities eg. cluster()
		Aggregation functions performs a calculation on a set of values, and returns a single value eg. count()
		Windows functions operate on multiple rows (records) in a row set at a time. eg. row_number()


Azure Monitor - Scalar Operators 
	These perform comparisons against Scalar Datatypes
	Bitwise (binary) operators
		binary_and
		binary_not
		binary_or
		binary_shift_left
		binary_shift_right
		binary_xor 
	Logical (binary) operators
		Equality =
		Inequality !=
		Logical and and
		Logical or or 
	Datetime /timespan arithmetic
		add or subtract datetime eg. datetime(1997-06-25) - datetime(1910-06-11)
		add, subtract, divide or multiple timespan eg. 1d + 2d 
	Numerical operators (works on int, long and real)
		Add +, Subtract -, Multiply *, Divide /
		Modulo %
		Less <, Greater >, Equal ==, Not Equal =!, Less or Equal <=, Greater or Equal >=
		Equals to one of the elements in
		Not equals to any of the elements !in 
	String operators
		== , != , =~, !~, has, has, hasprefixhasprefix, hassuffix , contains, startswith, endswith, matches, in, has_any (many more…) 
	between operator Matches the input that is inside the inclusive range.
		Table1 | where Num1 between (1 .. 10)
		Table1 | where Time between (datetime(2017-01-01) .. datetime(2017-01-01)) 
    
    
Azure Monitor - Tabular Operators 
	These perform comparisons against a bunch of rows. There are a lot of tabular operators
	count — Returns the count of rows in the table.
	take — returns up to the specified number of rows of data
	sort — Sort the rows of the input table into order by one or more columns.
	project — returns a specific set of columns.
	where — Filters a table to the subset of rows that satisfy a predicate.
	top — returns the first N records sorted by the specified columns
	extend — creates a new column by computing a value
	summarize — Aggregates groups of row
	render — Renders results as a graphical output


Azure Monitor - Metrics Explorer
	Metrics Explorer is a sub-service of Azure Monitor that allows you to plot charts, visualize correlating trends, and investigate spikes and dips in metrics values.
	Charting options
	To visualize a metric you need to define:
	Scope: You can select *resource(s) Eg. VM, StorageAccount
	Namespace: a specific group of metric data within a resource
	Metric: The actual value you are interested in visualizing
	Aggregation: how you want group the values into the final result


Azure Monitor - Azure Alerts 
	Alerts notify you when issues are found with your infrastructure or application
	They allow you to identify and address issues before the users of your system notice them.
	Azure has 3 kinds of Alerts
		Metric Alerts
		Log Alerts
		Activity Log Alerts 
	When an alert is triggered you can be notified and have it take action
	The Alert Rule defines who should we monitor and when should we react
	A resource such as an Azure VM is designated as the Target Resource and it omits a signal
	The Signal is a data payload emitted from the resource that could be the following types:
		Metric
		Log
		Activity log
		Application Insights 
The signal is evaluated against a criteria or logical test to determine if the alert has been triggered
eg. Percentage CPU > 70%
An action group contains actions to be that will be performed when alert is triggered
An action could be a: Automation runbook, Azure Function, ITSM, Logic App, Webhooks or Secure Webhooks
The current state of your alert Monitor Condition is set by the system Alert state is set by the user


Azure Monitor - Azure Dashboards 
	Dashboards are a virtual workspaces to quickly launch tasks for day-to-day operations and monitor resources
	Build custom dashboards based on projects, tasks, or user roles


Azure Monitor - Azure Workbooks
	Workbooks provide a flexible canvas for data analysis and the creation of rich visual reports within the Azure portal.
	They allow you to tap into multiple data sources from across Azure and combine them into unified interactive experiences.
	It tells a story about the performance and availability of your applications and services.
	Workbooks are temporary workspaces to define a document-like format with visualization intertwined to help investigate and discuss performance. 


Azure Monitor - Application Insights 
	Application Insights is an Application Performance Management (APM) service
	It is a sub-service of Azure Monitor.
	What is an APM?
		Monitoring and management of performance and availability of software apps. APM strives to detect and diagnose complex application performance problems to maintain an expected level of service.
	Why use Application Insights?
		automatically detect performance anomalies
		includes powerful analytics tools to help you diagnose issues and to understand what users do with your app
		designed to help you continuously improve performance and usability
		works for apps on a for .NET, Node.js, Java, and Python hosted on-premises, hybrid, or any public cloud.
		Integrates with your DevOps process
		can monitor and analyze telemetry from mobile apps by integrating with Visual Studio App Center 
	To use Application Insights you need to instrument your application.
		To instrument you need to install the instrument package (SDK)
		Or enable Application Insights using the Application Insights Agents when supported 
	There are many ways to view your telemetry data
		Apps can be instrumented from anywhere
		When you set up Application Insights monitoring for your web app, you create an Application Insights resource in Microsoft Azure.
		You open this resource in the Azure portal in order to see and analyze the telemetry collected from your app. 
		The resource is identified by an instrumentation key (ikey) 
	What does Application Insights Monitor?
		Request rates, response times, and failure rates
		Dependency rates, response times, and failure rates
		Exceptions
		Page views and load performance
		AJAX calls
		User and session counts
		Performance counters
		Host diagnostics
		Diagnostic trace logs
		Custom events and metrics 
	Where do I see my telemetry?
		Smart detection and manual alerts
		Application map
		Profiler
		Usage Analysis
		Diagnostic search for instance data
		Metrics Explorer for aggerated data
		Dashboards
		Live Metrics Stream
		Analytics
		Visual Studio
		Snapshot debugger
		Power BI
		REST API
		Continuous Export 
	
	
Azure Backup - Azure Backup Service 
	Azure Backup Service is a backup layer that spans many Azure services.
	You won’t find it by searching based on the service name
	Azure Backup is directly integrated with Azure Services
	What can I backup?
		On-Premise
		Azure VMs
		Azure Files
		SQL Server (within Azure VM)
		SAP HANNA databases (within Azure VM)
		Azure Database for PostgreSQL server 
	Why use Azure Backup?
		Offload on-premises backups
		Backup your VMs
		Scales Easily
		Get unlimited data transfer (no limit and no charge)
		Keep data secure (built-in security at-rest and in-transit)
		Centralized monitoring and management
		App Consistent Backups (restore apps back to an exact state)
		Automatic Storage Management
		Multiple Storage Options 


Azure Backup - MARS Vaults 
	Azure Recovery Services (ARS) vault is a storage entity in Azure that houses data and recovery points created over time.
	The data is copies of data, or configuration information for VMs, workloads, servers, or workstations. 
	Backup data for various Azure services: eg.
		IaaS VMs (Linux or Windows)
		Azure SQL databases. 
	Recovery Services vaults supports:
		System Center (Data Protection Manager) DPM
		Windows Server
		Azure Backup Server
		and more.  
	Recovery Services vaults has the following features:
		Enhanced capabilities to help secure backup data
		Central monitoring for your hybrid IT environment
		Azure role-based access control (Azure RBAC)
		Soft Delete
		Cross Region Restore 
    
 
Azure Backup - MARS Agent
	Microsoft Azure Recovery Services (MARS) agent can back up files, folders, and system state from Windows on-premises machines and Azure VMs
	Backups are stored in a Recovery Services vault in Azure
	MARS agent is also known as the Azure Backup agent
	The MARS agent does not support Linux operating systems
	To install the agent and perform backups you’ll need to:
		create an Azure Recovery Services vault
		Create a backup policy within the vault
		Configure secure route for back eg. ExpressRoutes or Private Endpoints (optional)
		Download the MARS agent
		Install and register the Agent to your Windows machine. 
    

Azure Backup - Backup Policy 
	To create a backup policy you choose a datasource type:
		Azure VMs or PSQL database 
	Choose the frequency
	How many snapshots you want to retain
	Choose the time range for your retention


Azure Backup - Azure Site Recovery
	Azure Site Recovery (ASR) is a hybrid (on-premise to cloud) backup solution for site-to-site recovery.
	ASR is one of the tools useful for your business continuity and disaster recovery (BCDR) strategy
	Site Recovery replicates workloads from a primary site to a secondary site.
	In case primary site suffers a failure, Site Recovery will fail-over to the secondary site to ensure continuity of services
	Site Recover can replicate:
		Azure VMs between regions (cross-region replication)
		Windows, Any OS, and Linux
		On-premise to Azure
		Between other Cloud Service Providers eg AWS to Azure
		VMWare, Hyper-V, or Physical Machines
		Recovery Point Objectives (RPO) how often you backup (how much data loss can you tolerate?)
		Recovery Time Objectives (RTO) how quickly you can recover a backup after experiencing a disaster
	Recovery Point Objective is concerned with the possible amount of data (expressed as time) that could be lost following a failure event.
	Recovery Time Objective is concerned with getting applications and systems back up and running as soon as possible within the pre-defined timeframe


Azure Container Instances - Introduction to ACI 
	Azure Container Instances (ACI)
	Package, deploy, and manage cloud applications using containers Fully Managed Docker as a Service
	Azure Container Instances (ACIs) allow you to launch containers without the need to worry about configuring or managing the underlying virtual machine
	Azure Container Instances is designed for isolate containers:
		simple applications
		task automation
		build jobs 
		Containers can be provisioned within seconds where VMs can take several minutes
		Containers are billed per second where VMs are billed per hour (greater savings)
		Containers have granular and custom sizing of vCPUs, Memory and GPUs where VMs sizes are predetermined
		ACI can deploy both Windows and Linux containers
		You can persist storage with Azure Files for your ACI containers
		ACIs are accessed via a fully qualified domain name (FQDN) eg  customlabel.azureregion.azurecontainer.io. 
	Azure provides Quickstart images to start launching example applications but you can also source containers from:
		Azure Container Registry
		Docker Hub
		Privately Hosted Container Registry 
	Container Groups are collections of containers that get scheduled on the same host machine. The containers in a container group share:
		lifecycle
		Resources
		local network
		storage volumes 
	Container Groups are similar to a Kubernetes pod
	Multi-container groups currently support only Linux containers. 
	There are two ways to deploy a multi-container group:
		Resource Manager Template (ARM template) —  when you need to deploy additional Azure service resources
		YAML File —  when your deployment includes only container instances. 


Azure Container Instances - Container Restart Policies 
	A container restart policy specifies what a container should do when their process has completed.
	Azure Container Instances has 3 restart-policy options:
		Always (default) Containers are always restarted. Suited for long running tasks eg. web-servers
		Never Containers run one time only. Suited for one off tasks. eg. background jobs
		OnFailure Containers that encounter an error 


Azure Container Instances - Container Environment Variables 
	Environment variables (Env Vars) allow you to pass configuration details to your containers.
	Environment variables can be set via the Azure Portal, CLI or PowerShell
	Secured Environment Variables
	By default, Environment Variables are store in plaintext.
	If you need to secure your environment variables you can use the --secure-environment-variables flag


Azure Container Instances -	Container Persistent Storage 
	Azure Containers are stateless by default.
	When a container crashes or stops all state is lost.
	To persist state you need to mount an external volume
	You can mount the following external volumes:
		Azure Files (file share)
		Secret volume
		Empty Directory
		Cloud git repo 
	To mount a file volume you need do this via PowerShell or CLI and specify the details to mount the drive


Azure Container Instances -	Container Troubleshooting 
	To troubleshoot a container you can pull logs with az container logs
	To get diagnostic information during container startup use the az container attach
	To start an interactive container run az container exec
	To get metrics such as CPU usage az monitor metrics list
	
	
Azure Container Registry - Introduction to ACR 
	Create and maintain Azure container registries to store and manage your private Docker container images and related artifacts.
	Azure Container Registry is a managed, private Docker registry service based on the open-source Docker Registry 2.0
	Use Azure Container Registries with your existing container development and deployment pipelines
	Use Azure Container Registry Tasks to build container images in Azure.
	Pull images from an Azure container registry to various deployment targets:
		Kubernetes
		DC/OS
		Docker Swarm 
	Many Azure services have direct support to use ACR:
		Azure Kubernetes Service (AKS)
		Azure App Service
		Azure Batch
		Azure Service Fabric
		and more! 
	Developers can also push to a container registry as part of a container development workflow with delivery tools such as:
		Azure Pipelines
		Jenkins 
		Many ways to work with ACR via: Azure CLI
		Azure PowerShell
		Azure Portal
		Azure SDK
		Docker Extension for Visual Studio Code 


Azure Container Registry - Registry Tasks 
	ACR Tasks allow you to automate OS and framework patching for your Docker containers.
	For Quick tasks you can push a single container image to a container registry on-demand, in Azure, without needing a local Docker Engine installation
	You can trigger automated builds by:
		source code updates
		updates to a container's base image
		Timers on a schedule 
	You can create multi-step tasks
	Each ACR Task has an associated source code context
		the location of a set of source files used to build a container image or other artifact 
	Tasks can take advantage of run variables
		reuse task definitions and standardize tags for images and artifact 


Azure Kubernetes Service - Introduction to AKS 
	Azure Kubernetes Service (AKS)
	Fully Managed Kubernetes as a Service
	Azure Kubernetes Service (AKS) makes it simple to deploy a managed Kubernetes cluster in Azure
	Azure will manage for you the:
		Kubernetes masters 
		health monitoring
		maintenance 
	You only have to maintain the:
		agent nodes 
	AKS service is free
	You only pay for the agent nodes within the cluster not the masters
	When you deploy an AKS cluster, the Kubernetes master and all nodes are deployed and configured for you
		Additional features can also be configured during the deployment process such as:
		Advanced networking
		Azure Active Directory integration to use Kubernetes role-based access control (Kubernetes RBAC)
		Monitoring
		Windows Server containers are supported in AKS 
	You should use AKS for scenarios where you need on-premises full container orchestration:
		service discovery across multiple containers
		automatic scaling
		coordinated application upgrades 


Azure Kubernetes Service - Bridge to Kubernetes 
	Bridge to Kubernetes is an extension in Visual Studio and Visual Studio Code that allows developers to write, test, and debug microservice code on their development workstations.
	Bridge to Kubernetes allows you include a locally running service to your AKS cluster.
	Side-stepping to create Docker, Kubernetes configuration
	For the lifetime of this connection, a proxy is added to your cluster in place of your Kubernetes deployment that redirects requests to the service to your development computer.
	When you disconnect, the application deployment will revert to using the original version of the deployment running on the cluster.
	Azure Dev Spaces will be retired on October 31, 2023.
	Customers should move to using Bridge to Kubernetes, a client developer tool.


Azure DNS - Introduction to Azure DNS
	What is a Domain Name System (DNS)?
	It is a service that is responsible for translating (or resolving) a service name to its IP address.
	Azure DNS is a hosting service for DNS domains that provides name resolution by using Microsoft Azure infrastructure
	Public DNS Internet-facing
		Allows you to manage domains for internet accessible domains
			Pointing your domain to your website
			Setting records to prove you own the domain
			Records to connect you domain to your email server 
	Private DNS Internal-facing
	Allow you to use your own custom domains instead of the Azure provided domains
		Many Azure Services use fully qualified domain name (FQDN) to identify services on the network.
			eg. Azure Storage Accounts FQDN: http://storageaccount.file.core.windows.net/ 
	You can't use Azure DNS to buy a domain name.
	You can purchase a domain in App Services or a third-party provider and have Azure DNS manage


Azure DNS - Zones Records Record Set
	What is a DNS zone?
	A DNS zone is a container for all your DNS records for a specific domain name
	What is a record?
	A DNS record is a rule that says where to send your domain name
	A record is composed of name, type and value:
		The name tells the record how to listen eg. www
		The type tells how to handle the record eg. A go to the IP address
		The value inform us what we should eg. IP address value 104.194.51.120 
	What is a record set?
	Sometimes you need to group a bunch of records together, this is what is called a record set. In Azure DNS you always create record sets, even if they only contain a single record.
	This record set has multiple records for Name Servers (NS), so if your primary DNS server becomes available it will know to you the second, third or fourth DNS server as a backup server.


Azure DNS - Record Sets 
	In Azure you always create Record Sets even when you just want a single record.
	Naming your Record
	Name A record that has a name is considered a Fully qualified domain (FQDN) or you can think of it as a subdomain eg. https://www.exampro.co
	No Name A record that is left empty is considered an apex or naked domain eg. https://exampro.co
	Wildcard You can set wildcards which act as catch-alls. Eg * or *.trek
	@ You can use an at-sign (@) as your name. This is shorthand for saying ORIGIN. So this means you’re pointing to the naked domain.
	What is a Time to Live (TTL)?
	TTL tells other servers requesting your domain how long it should cache this record so it doesn’t need to frequently ask you what to do.
	A long TTL can reduce costs because servers check less frequently
	A short TTL can have failover happen faster, since you have to wait for the cache to expiry for a server to see that you’ve changed a record to point to you backup server.
	Record Type
	Azure Supports the following types of records
	A Address lets you point your domain to an IPv4 address
	AAAA lets you point your domain to an IPv6 address
	CAA Certificate Authorities (CAs) records authorized who can issue certificates for their domain
	CNAME Canonical Name record creates an alias from one domain to another so you set the record value to a domain
	MX Mail Exchange records point to mail servers that handle emails
	NS Name Server records identify multiple DNS servers for the domain and there are multiple in case the primary DNS server fails
	PTR Pointer record points to a domain or host name but is used for reverse DNS lookup
	SRV Service record is used to identify computers that host specific services, like locating Domain Controllers for Active Directory
	TXT Text records is just text, and can serve multiple purposes, such as documentation or as a means of verification
	SOA Start of Authority record contains administrative details about a domain
	Azure has its own special record type called an Alias that work with A, AAAA and CNAME records
	Azure Alias record points directly to an Azure resource instead of to an IP or hostname
	Imagine you were pointing to an IP or hostname and you deploy a service that causes the IP to change. Your domain would be left dangling (pointing to now where) And you would have to manually update the record to the new correct address.
	Azure Alias records always point to the right place.


Azure Networking - Introduction to VNets 
	Virtual Network (VNet) is a logically isolated section of the Azure Network where you launch your Azure resources.
	Azure DNS — manage your own DNS domain
	Virtual Network (VNet) — logically isolated section of Azure network
		Address spaces
		Route Tables
		Subnets 
	Network Security Groups A virtual firewall at the subnet or NIC level
	ExpressRoute A 50 Mbps-10 Gbps connection between on-premise to VNET
	Virtual WAN a centralized network to route different network connections
	Virtual Network Gateway - A site-to-site VPN connection between a VNet and local networks
	Network Interfaces virtual network device to allow your VMs to communicate using IP protocols


Azure Networking - VNet Peering 
	VNET peering is when you connect multiple VNet so they act as one network.
	There are 2 types of VNet Peering:
		1. Regional VNet Peering When you peer two VNets from the same region
		2. Global VNet peering When you peer two VNets from two different regions 


Azure Networking - Network Interfaces 
	What is a Network Interface?
	Software or hardware interface between two pieces of equipment or protocol layers in a computer network.
	A Network Interface Controller (NIC)
	A computer hardware component that connects a computer to a computer network.
	Also known as:
		network interface card
		network adapter
		LAN adapter
		physical network interface 
	1990s Ethernet Interface Controller card
	NICs communicate using Internet Protocol (IP)
	NICs are devices for both the:
		Data Link Layer (Layer 2)
		Physical Layer (Layer 1) 
	Azure Network Interfaces (NICs)
		Azure Network Interfaces are attached to Azure VM instance.
		Without an NIC, An Azure VM instance would have no way to communicate.
		An Azure VM instance has to have an NIC and can have multiple NICs. 
    
    
Azure Networking - Network Routes and Route Tables 
	What is a Route Table?
	A Route Table is a table of data stored in a router or network host that lists routes to the next destinations.
	Routes are the roads to your virtual network. Without them, data would not know where to go.
	Default System Routes
	By default Azure creates a route table with defaults routes and associates them to your subnets so you don’t have to do anything to get routing.
	If you were to check the Azure Route Table service you won’t see these default route tables since it hidden and managed by Azure for you.
	Azure sets the following default routes:
	Source 	Address prefixes 	Net hop type
	Default 	Unique to VNeT 	Virtual Network
	Default 	0.0.0.0/0 	Internet
	Default 	10.0.0.0/8 	None
	Default 	192.168.0.0/16 	None
	Default 	100.64.0.0/10 	None
	Net hop type
		Virtual Network ← A route to your VNet
		Internet ← A route to the Internet
		None ← Reserved for private use in RFC 1918 so don’t go anywhere
		None ← Reserved for private use in RFC 1918 so don’t go anywhere
		None ← Reserved in RFC 6598 
	Azure may assign additional default routes based if you have other capabilities enabled
	User Defined Routes
	You can override the system routes assigned to your subnets by creating a new route table and associating it with a subnet.
	A User defined Route table can be assigned to multiple subnets, but a Subnet can only have one user defined route table
	When you create your user defined route table, all the default system routes remain unless you override them within your route table
	If you wanted to have a private subnet (a subnet that cannot reach the internet)
	You would just create a new route for 0.0.0.0/0 that hops to None
	The Next Hop is where to send the route:
	The virtual appliance is a VM that runs a network application
	eg. Firewall In this hop type you also have to provide the Private IP address to the VM


Azure Networking - Address Space 
	What is an Address Space?
	It is a range of available IP addresses that you are allocating for you use within your Virtual Network (VNeT)
	The amount of IP addresses available is determined based on the CIDR range notation eg. 10.0.0.0/24
	A CIDR Block of /24 will allocate 256 possible addresses A CIDR Block of /27 will allocate 32 possible addresses
	Azure Virtual Network (VNeT) allows you defined a multiple address spaces
	Address ranges cannot overlap within the same VNet
	The address count is not the actual available IP addresses as Azure will reserve 5 of the IP addresses:
		x.x.x.0: Network address
		x.x.x.1: Reserved by Azure for the default gateway
		x.x.x.2, x.x.x.3: Reserved by Azure to map the Azure DNS IPs to the VNet space
		x.x.x.255: Network broadcast address (the last IP in the range, its not always 255) 


Azure Networking - Subnets 
	What is a Subnet?
	A subnet is a logical division of an address space.
	Subnets help you define different kinds of workloads and allows you to apply virtual isolation within your network.
	When you launch an Azure resource you choose the subnet you want to launch within and an IP from that subnet is assigned to your resource
	Associating a Route Table
	A subnet needs a Route Table so it can access
	Public vs Private Subnet
	Public and Private subnet describes whether a subnet is reachable from the internet or not.
	Azure has no concept of private and public subnets and its up to you to configure our subnets to have ensure they do no reach the internet by ensuring they have no route via the their route table to the Internet Gateway
	Associating Network Security Gateways (NSG)
	You can associate an NSG to protect traffic entering and leaving your subnet by applying security rules that can
	Allow or deny access based on IP address, port and protocol.
	Gateway Subnet
	Azure has a special type of Gateway Subnet that is used by Azure Virtual Network Gateway and that service Launches specialized VMs into that subnet.


Azure Networking - Private Links 
	Azure Private Links allows you to establish secure connections between Azure resources so traffic remains within the Azure Network
	Private Link Endpoint is a Network Interface that connects you privately and securely to a service powered by Azure Private Link. 	Private Endpoint uses a private IP address from your VNet
	Third-Party provides can be powered by Private Link
	Many Azure services by default work with Private Link eg. Azure Storage, CosmoDB, SQL
	Private Link Service allows you to connect your own workload to Private Link. You need an Azure Standard Internal Load Balancer and associate it with the Link Service


Azure Networking - Azure Express Routes 
	Azure ExpressRoutes creates private connections between Azure datacenters and infrastructure on your premises or in a colocation environment
	ExpressRoute connections don't go over the public Internet and as a result can offer: more reliability, faster speeds, consistent latencies, higher security
	Connectivity can be from an:
		any-to-any (IP VPN) network
		a point-to-point Ethernet network
		virtual cross-connection through a connectivity provider at a colocation facility 
	ExpressRoute Circuits
	Primary Connection:
	Microsoft Peering for Office 365, Dynamics 365, Azure Public Services (Public IP)
	Secondary Connection:
	Azure Private Peering for VNets
	ExpressRoute Direct allows for greater bandwidth connections from 50 Mbps to 10Gbps.
	Ideal where for hybrid solutions with massive amounts of data or where latency matters.


Azure Networking - Azure Firewall 
	Azure Firewall is a managed, cloud-based network security service that protects your Azure VNets resources
	It is a fully stateful Firewall as a Service (FWaaS) with:
		built-in high availability
		unrestricted cloud scalability 
	You can centrally create, enforce, and log application and network connectivity policies across subscriptions and virtual networks.
	Azure Firewall uses a static public IP address for your VNet resources allowing outside firewalls to identify traffic originating from your virtual network.
	The service is fully integrated with Azure Monitor for logging and analytics.
	Traffic Filtering
	Traffic is denied by default
		You launch an Azure Firewall in its on VNet
		Other VNets pass through this Central Vnet
		You get Microsoft Threat Intelligence
			Blocks know malicious IPs and FQDNs 


Azure Networking - Azure Network Watcher 
	Azure Network Watcher provides tools to monitor, diagnose, view network metrics, and enable or disable logs for resources in an Azure virtual network.
	From Network Watcher you can access:
		IP flow verify checks 
		Packet Capture
		Troubleshoot VPNs, NSGs
		NSG Flowlogs
		Diagnostic Logs
		Traffic Analytics
		Network Performance Monitor
		And more…! 
	Network Watcher can monitor and repair Azure resources you provision eg:
		Virtual Machines
		Virtual Networks
		Application Gateways
		Load balancer 
	Network Watcher cannot be used to monitor PaaS (fully managed services) monitoring or Web Analytics
	Network Watcher is disabled by default in most regions so you need to enable it at per region basis
	Network Watcher can visualize the topology of your VNets
	You can download the topology as an SVG you to use in presentations and documentation
	You can quickly discover and browse your networking components to quickly monitor and repair your virtual network


Azure Networking - Network Performance Monitor 
	Network Performance Monitor (NPM) is a cloud-based hybrid network monitoring solution that helps you monitor network performance between various points in your network infrastructure.
	It also helps you monitor network connectivity to service and application endpoints and monitor the performance of Azure ExpressRoute.
	To use NPM you need to create an NPM resource
		In order to create an NPM resource you need to create a Log Analytics Workspace 
	The solution generates alerts and notifies you when a threshold is breached for a network link. It also ensures timely detection of network performance issues and localizes the source of the problem to a particular network segment or device.
	Network Performance Monitor detects network issues like:
		traffic blackholing
		routing errors
		unconventional network issues 
    

Azure Network Security Groups - NSG Rules 
	Network security group (NSG) filters network traffic to and from Azure resources in a VNet
	An NSG is composed of many Security Rules
	Each Security Rule has the following properties:
	Name — A unique name within the network security group.
	Source or destination — An IP Address or CIDR block, Service Tag or Application Security Group
	Port Range — Specify a single or range of ports. eg. 80 or 10000-10005
	Protocol — TCP, UDP, ICMP or ANY
	Action — Allor or Deny
	Priority — A number between 100 and 4096 (lower number higher priority)
		Inbound Rules apply to traffic entering the NSG
		Outbound Rules apply to traffic leaving the NSG 


Azure Network Security Groups - Default Security Rules 
	Azure sets the following default security rules when you create an NSG:
		Outbound Rules see webpage 
		Inbound Rules see webpage 


Azure Network Security Groups - Security Rules Logic 
Security Rules has a lot of logic to determine how to apply its rules
		You may not create two security rules with the same priority and direction.
		You can have 5000 NSG per subscription, 1000 NSG rules per NSG
		Priority
			Rules are processed in priority order, with lower numbers processed before a higher number
			Network security group security rules are evaluated by priority using the 5-tuple information to allow or deny traffic: 1] source 2] source port 3] Destination 4] destination port 5] protocol 
		Flow Records
			The flow record allows a network security group to be stateful. 
			A flow record is created for existing connections
			Communication is allowed or denied based on the connection state of the flow record.  
		Statefulness
			If you specify an outbound security port you don’t need to set the inbound port since it will be set for you.
			You only need to specify an inbound security rule if communication is initiated externally.
			The opposite is also true. If inbound traffic is allowed over a port, it's not necessary to specify an outbound security rule to respond to traffic over the port. 
		Interruption
			Existing connections may not be interrupted when you remove a security rule that enabled the flow.
			Traffic flows are interrupted when connections are stopped and no traffic is flowing in either direction, for at least a few minutes. 


Azure Network Security Groups - NSG Combinations 
	Let’s look at how rules changed based on NSG attached
	When there is no NSG assigned to the Subnet or NIC then all traffic is allowed
	When an NSG is assigned to the NIC and no NSG at the subnet then rules are predictable based on allow and deny rules
	An NSG applied to a subnet applies its rules to all resources in that subnet
	First, the NSG rules are evaluated at the subnet, Then the rules at the NIC are evaluated
	If you wanted to open port 80 you would need to allow port 80 on both the subnet and NIC NSG	
	
	
Azure Virtual WAN - Introduction to Azure Virtual WAN
	Azure Virtual WAN is a consolidated networking service that brings many networking, security, and routing functionalities in a single operational interface. 
	These functionalities include
		branch connectivity (via connectivity automation from Virtual WAN Partner devices such as SD-WAN or VPN CPE)
		Site-to-site VPN connectivity,
		remote user VPN (Point-to-site)
		connectivity, private (ExpressRoute) connectivity,
		intra-cloud connectivity (transitive connectivity for virtual networks)
		VPN ExpressRoute inter-connectivity,
		routing
		Azure Firewall encryption for private connectivity. 
	Azure Virtual WAN itself is a Software Defined WAN (SD-WAN)
	Azure Virtual WAN is a much better way to route to your branches, datacenters, VNet and cloud services.


Azure Virtual WAN - PoPs
	A Point of Presence (PoP) Is an entry at the edge of a Network. eg. ISP Datacenter
	Your Office
	A Hop is when you change networks
	For enterprises, traversing the internet is not ideal for speed because You have little not control on the fastest route through the internet
	Another Branch Office
	Your Data Center


Azure Virtual WAN - MPLS
	What if instead of using the Internet we establish a private connection through trusted partners datacenters
	We apply a special label to our packets so special network devices can read the label’s end destination and forward the packet through the most efficient route through this private network.
	This is what is known as MPLS
	What is Multi-Protocol Label Switching (MPLS)?
	It’s a method of packet forwarding where instead of using IP Address and Layer 3 information to make forwarding decisions an MPLS label is used to determine the shortest route to end destination.
	MPLS is a private connection linking data centers and branch offices. 
	MPLS is outsourced and managed by service providers who guarantee network performance, quality, and availability.
	MPLS uses a special network hardware that combines both a router and switch called a Label Switch Router (LSR)
	MPLS is efficient because the path for a Label across the network will be pre-determined called a Label Switched Path
	An MPLS Label is data inserted between Layer 2 and Layer 3 of your IP Packet and this is what they call a Shim
	Why use an MPLS?
		Virtual Private Networks (VPNs) — It makes it easy to for us to establish private connections
		Traffic Engineering (TE) — We can control how are packets traverse the network
		Quality of Service (QoS) — We can ensure the performance and availability of our packets 
	What is the downsides of MPLS?
		They get really expensive
		Its private and not secure (its just a routing mechanism, there is no inherit encryption)
		With the rise of cloud services, you still have to traverse the internet any in many cases 


Azure Virtual WAN - SD WAN
	If you want a fast and private connection to Azure you traverse the MPLS to a data center owned by trusted Azure partner and you establish your ExpressRoute to your VPN
	If you want to use public facing cloud service like Office 365, traveling through your MPLS over ExpressRoute into the Microsoft Network to Office 365 and back through that route is not always fast
	We still have to do some hopping but maybe there is a better way
	Azure has Point of Presence (PoP) distributed all around the globe that has a regional presence and so connecting to Office 365 will be generally faster going through the internet.
	What is Software Defined WAN (SD-WAN)?
	SD-WAN decouples CPU intensive tasks from routers such as Management, Operations, and the Control plane that can now be controlled in a central location remotely and virtually at your headquarters. Since most ISPs support SD-WAN architecture you can directly control the flow of traffic through the internet.
	SD-WAN can replace MLPS, so you traverse the internet instead of a private network
	SD-WAN is more cost-effective and require less configuration than an MLPS initially and at scale
	SD-WAN is secure because you will use HTTPS which is supported by your ISP
	With SD-WAN you are pre-determining the path through the Internet. So you can perform the least amount of hops to the closest Azure Point of Presence (PoP)
	With Azure VirtualWAN you are deploying VNet with service endpoints on the edge of a region which is called Hubs
	You are configuring virtual devices in Virtual Wan so your on-premise can connect to your Hub so it has the fastest route to your Azure cloud resources.
	
	
Azure Virtual Network Gateways - Introduction to Virtual Network Gateways
	What is a (Virtual Private Network) VPN?
	A VPN extends a private network across a public network and enables users to send and receive data across shared or public networks as if their computing devices were directly connected to the private network.
	What is a Virtual Network Gateway?
		A virtual network gateway is the software VPN device for your Azure virtual network.
		When you deploy a virtual network gateway it will deploy two or specialized VMs in specific subnet you need to create called a “gateway subnet”
		These deployed VMs contain routing tables and run specific gateway services. 
		You will choose a Gateway Type and that will determine if it’s a VPN Gateway or an ExpressRoute Gateway 


Azure Virtual Network Gateways - Virtual Network Gateway Designs 
	When you create a VPN Gateway you are generally designing for one of the following topologies:
	Site-to-Site (S2S) When you connect Azure to an On-Premise Data Center
	Multi-Site When you connect Azure to multiple On-Premise Data Centers
	Point-to-Site (P2S) When you connect Azure to multiple individual computers
	VNet-to-VNet When you connect two VNets in different regions, subscriptions or deployment models
	
