Azure Active Directory
	Cloud-Based identity and access management service. 
	Manage users, Sign-Ins and access to AD-related resources

Domain
	A domain is an area of a network organized by a single authentication database
	An Active Directory Domain is a logical grouping of AD objects on a network 

Domain Controller (DC)
	A domain controller is a server that authenticates users identities and authorizes their access to resources 
	
Domain Computer
	A computer that is registered wiht a central authentication database A domain computer would be an AD Object 
	
AD Object
	An AD Object is the basic element of Active Directory such as: 
		Users, Groups, Printers, Shared Folders

Group Policy Object
	A virtual collection fo policy settings. It controls what AD objects have access to. 
	
Organization Units (OU)
	A subdivision within Active Directory into which you can place users, groups, computers, and other organizational units. 
	
Directory Service
	A directory service, such as Active Directory Domain Services (AD DS), provides the methods for storing directory data and making this data available to network users and administrators. A Directory service on a Domain Controller
	
Azure AD - Tenant
	A tenant represents an organization in Azure Active Directory
	A tenant is a dedicated Azure AD Server Instance 
	A tenant is automatically created when you sign up for either
		Microsoft Azure
		Microsoft Intue
		Microsoft 365

Azure Active Directory Domain Services (AD DS)
	Azure Active Direcotry Domain Services (AD DS) provides managed domain service such as: 
		Domain Joins
		Group Policies
		LDAP (Lightweight Directory access protocol)
		Kerberos / NTLM Authentication
		
Azure AD Connect 
	Azure AD Connect is a hybrid service to connect your on-premise Active Directory to your Azure Account
	Azure AD Connect allows for seamless Single Sign On from your on-premise workstation to Microsoft Azure 
	Azure AD Connect has the following features: 
		
		Password hash synchronization - sign-in method, synchronizes a hash of a users on-premises AD passwords with Azure AD
		
		Pass-through authentication - sign-in method, allows users to use the same password on-premises and in the cloud
		
		Federation Integration - hybrid environment using an on-premises AD FS infrastructure, for certificate renewal
		
		Synchronization - Responsible for creating users, groups, and other objects, ensures on-prem and cloud data matches
		
		Health Monitoring - robust monitoring and provides a central location in the Azure portal to view this activity
		
Active Directory - Users
	Users represent an identity for a person or employee in your domain. A user has logon credentials and can use them to log into the Azure Portal 
		You can assign roles and administrative roles to users 
		You can add users to groups 
		You can enforce authentication methods such as (MFA) 
		You can track users sign ins 
		Track devices user's login from and allow or deny devices 
		Assign Microsoft licenses
		
		Azure AD has two kinds of users: 
			Users - A user belongs to your organization
			Guest Users - A guest user belongs to another organization
		
Azure AD Groups	
	Groups - lets the resource owner (of Azure directory owner), assign a set of access permissions to all the members of the group, instead of having to provide the rights one-by-one. 
	Groups contain: 
		Owners - Has permissions to add and remove members 
		Members - Have permissions to do things 
	Assignment 
		You can assign roles directly to a group 
		You can assign applications directly to a group
		
		Request to Join Groups
			The group owner can let userse find their own groups to join, instead of assigning them. The owner can also set up the group to automatically accept all users that joinor to require approval. 	
		
Azure AD - Assign Access Rights
	There are four ways to assign resource access rights to yoru users: 
		Direct Assignment - The resource owner directly assigns the user to the resource
		Group Assignment - The resource owner assigns an Azure AD group to the resource, which automatically gives all of the group members acceess to the resource 
		
		Rule-based Assignment - The resource owner creates a group and uses a role to define which users are assigned to a specific resource
		 
		 External Authority Assignment - Accesss comes from an external source, such as an on-premises directory or a SaaS app. 
		 
Azure AD - External Identities 
	External Identities in Azure AD, allow people outside your organization to access your apps and resources, while letting them sign in using whatever identity they prefer.
		
		Supports logins from Google and Facebook
		Share Apps with external users (B2B COllaboration)
		Develop Apps intended for other Azure AD tenants (single tenant or multi tentant) 
		Develop white-labeled apps for consumers and customers (Azure AD B2C) 
	
Azure AD - Device Management 
	What is Device Identify Management? 
		The management of a physical devices such as phones, tablets, laptops and desktop computers, that are granted access to company resources such as Printers, Cloud Resources via device-based Conditional Access. 	
	
		For companies with a distributed workforce, that allows remote employedes and employees who are allowed use their own personal equipment (Bring Your Own Device).
		
		A company needs a way to protect their organization's assets such as access to cloud resoures across those devices where they have less control over the physical securities of the work environment. 
		
	There are 3 ways to get devices into Azure AD
		Azure AD Registered
			Personally owned or mobile devices
			And signed in with a personal microsoft or local account.
			Windows 10 
			iOS
			Android MacOS
		Azure AD Joined 
			Owned by an organization
			And signed in with an Azure AD account belonging to the organization. 
			They exist only in the cloud
			Windows 10
			Windows Server 2019 VM's running in Azure 
		Hybrid Azure AD Joined
			Owned by an organization
			And are signed in with an Active Directory Domain Services account belonging to that organization. 
			They exist in the cloud and on-premises
			Windows 7, 8.1, or 10
			Windows Server 2008 or newer
			
Azure AD Registered Devices 
	Definition - Registered to Azure AD without requiring organizational account to sign in to the device 
	Primary audience - Bring your own device (BYOD), Mobile devices 
	Device Ownership - User or Organization
	Operating Systems - Windows 10, iOS, Android and MacOS
	Provisioning
		Windows 10 - Settings 
		iOS/ Android - Company Portal or Microsoft Authenticator App
		MacOS - Company Portal 
	Device sign in options
		End-user local credentials, Passwords, Windows hello, PIN
		Biometrics or Pattern for other devices 
	Device Management 
		Mobile Device Managment (example: Microsoft Intune)
		Mobile Application Management
	Key capabilities 
		SSO to cloud resources 
		Conditional Access when Enrolled into Intune
		Conditional Access via App protection policy
		Enables Phone sign in with Microsoft Authenticator app 

Windows Hello 
	Gives Windows 10 users an alternative way to log into their devices and applications using:
		fingerprint
		iris scan 
		facial recognition
		
Azure AD Registered Devices - MDM and MAM 
	Mobile Device Managment (MDM) 
		control the entire device, can wipe data from it, and also reset it to factory settings 
	Mobile Application Management (MAM)
		Publish, Push, Configure, Secure, Monitor, And update mobile apps for your users
	MDM and MAM is managed via Microsoft Intune 
		To use Microsoft Intune you have to upgrade to Azure AD Premium 2
		Microsoft Intune is part of Microsoft Endpoint Manager
		Microsoft Endpoint Manager and Intune are part of Microsoft's Enterprise Mobility = Security (EMS)
		Intune = Endpoint Manager = EMS 
		
Azure Registered Devices - EMS 
	Microsoft Enterprise Mobility + Security (EMS) 
		Definition - Is an intelligent mobility management and security platform. Protect and secure your organization and empowers your employees to work in a new and flexible ways. 
		
		EMS is an umbrella of multiple Microsoft and Azure Services 
			VERY NOTABLY 
				AZURE ACTIVE DIRECTORY 
				MICROSOFT INTUNE 
				
Azure AD Registered Devices - Microsoft Authenticator
	Secure sign-ins for all your online accounts using: 
		MFA 
		Passwordless
		Password autofill
		
Azure AD Joined Devices 
	Definition - Joined only to Azure AD requiring organizatioonal account to sign-in to the device 
	Primary Audience
		Suitable for both cloud-only and hybrid organizations
		Applicable to all users in an organization
	Device Ownership 
		Organization
	Operating Systems
		All Windows 10 devices except Windows 10 Home
		Windows Server 2019 Virtual Machines running in Azure, Windows Autopilot 
	Provisioning
		Self-service: Windows OOBE or Settigns, Bulk Enrollment, Winodws Autopilot
	Device Sign in options
		Organiztional accounts using: password, windows hello for business, FIDO2.0 security keys(preview)
	Device Management 
		Mobile Device Managment (Microsoft Intune) 
		Co-management with Microsoft Intune and Microsoft Endpoint Configure Manager 
	Key capabilities 
		SSO to both cloud and on-premises resources 
		Conditional Access through MDM enrollment and MDM compliance evaluation
		Self-service Password Reset and Windows Hello PIN on lock screen 
		
		
Azure AD Joined Devices - Fido2.0 Security Keys 
	Fast Identity Online (FIDO) Alliance 
		An open industry association whose mission is to develop and promote authentication standards that help reduce the world's over reliance on paswords. 
		FIDO Alliance has published three sets of open specifications for simpler, stronger user authentication 
			FIDO Universal Second Factor (FIDO U2F) 
			FIDO Universal Authentication Framework (FIDO UAF)
			Client to Authenticator Protocols (CTAP) 
			CTAP is complementary to the W3C's Web Authentication (WebAuthn) specification; together they are known as FIDO2
	What is a Security Key? 
		A secondary device used as second step in authentication process to gain access to a device, workstation or application. 
		A security key can resemble a memory stick. 
		When your finger makes contact with a button or exposed metal on the device it will generate and autofill a security token. 
			Works otu of the box with Gmail Facebook and hundreds more 
			Supports FIDO2/WebAuthn, U2F
			Waterproof and crush resistant 
			USB-A and NFC dual connectors on a single key 
			
Hybrid Azure AD joined devices 
	Definition - Joined to on-premises AD and Azure AD requiring organizational account to sign in to the device 
	Primary Audience
		Suitable for hybrid organizations with existing on-premises AD infrastructure 
		Applicable to all users in an organization
	Device Ownership
		Organization
	Operating Systems
		Windows 10, 8.1,j and 7, Windows Server 2008/R2, 2012/R2, 2016 and 2019
	Provisioning 
		Windows 10, Windows Server 2016/2019
		Domain join by IT and autojoin via Azure AD Connect or ADFS config
		Domain joing by IT and autojoin via Azure AD Connect or ADFS config
		Domain join by Windows Autopilot and autojoin via Azure AD Connect or ADFS config
	Device sign in options 
		Organizational accounts using: 
			Password
			Windows Hellol for Business for Win 10
	Device Management
		Group policy, Configuration Manager standalone or co-management with Microsoft Intune
	Key capabilities 
		SSO to both cloud and on-premises resources 
		Conditional Access through Domain Join or through Intune if co-managed 
		Self-Service Password Reset and Windows Hello PIN reset on lock screen 
		Enterprise State Roaming across devices
		
Hybrid Azure AD joined devices - Windows Autopilot
	Windows Autopilot is a collection of technologies used to set up and pre-configure new devices, getting them ready for productive use
	When initially deploying new Windows devices
		Windows Autopilot uses the OEM-optimized version of windows 10
		This version is preinstalled on the device, so you don't have to maintain custom images and drivers for every device model
		Instead of re-imaging the device, your existing Windows 10 installation can be transformed into a "business-ready" state that can: 
			Once deployed, you can manage Winsdows 10 devices with: 
				Microsoft Intune
				Windows Update for Business
				Microsoft Endpoint Configuration Manager 
				other similar tools 
				
##################################mistakes were made, 300 lines are missing let it be known


Azure Policies - Azure Policy Definition File
	Display Name - Identifies the policy (128 character limit) 
	Type (read only )
		Built in - maintained by Michaelsoft 
		Custom - Created by you
		Static - Microsoft Owned, A regulatory Compliance
	Description - Provides the context of the policy 
	Metadata - Optional key value information to store on the policy
	Mode - Determines which resource types are evaluated. Changes whether using resource provider or Azure Resource Manager 
		Resource Manager 
			All - resource groups, subscriptions and all resource types
			Indexed - only resource types that support tags and location
		Resource Provider
			Microsoft.ContainerService.Data
			Microsoft.Kubernetes.Data
			Microsoft.KeyVault.Data
		Parameters - Values you can pass into the policy to allow the policy to be more flexible. A parameter has the following properties 
			Name - the name of the parametere 
			Type - string, array, object, boolean, integer, float or datetime
			Metadata - used by azure to display friendly information
				description
				display name 
				strong type 
				assign permissions
			defaultvalue
			allowevalues
	Policy Rule
		consists of an if and then blocks. In the if block, you define one or more conditions that specify when the policy is enforced. You can apply logical operators to these conditions to precisely define the scenario for a policy 
		Deny - the resource creation / update fails due to policy
		Audit - Creates a warning event in the activity log when evaluating a non-compliant resource but it doesn't stop the request 
		Append - Adds additional parameters/ fields to the requested resource during creation or update. A common example is adding tags on resources such as Cost Center or specifying allowec IPs for a storage resource. 
		Audit if not exists - creates a warning event in the activity log when evaluating a non-compliant resource, but it doesn't stop the request 
		Deploy if not exists - Executes a template deployment when specific condition is met. for example if SQL encryption is enabled on a database, then it can run a template after the DB is created to set it up a specific way. 
		Disabled - The policy is ignored (disabled). Oftern used for testing 
		
		
Azure Resource Manager - Azure Resource Manager 
	A deployment and management service for Azure
	Enables you to create, update, and delete resources in your azure account
Azure Resource Manager - Introduction
	Azure Resource Manager (ARM) is a service that allows you to manager Azure resources
		Azure Resource Manager is a collection of services in the Azure Portal, so you can't simply type in "Azure Resource Manager" 
	It is a management layer that allows you to: 
		Create, Update, Delete Resources
		Apply Management features eg. Access Controls, Locks, Tags
		Writing Infrastructure as Code (IaC) via JSON templates. 
			The specific features we are going to look at that make up ARM layer are the following: 
				Subscriptions
				Management Groups
				Resource Groups
				Resource Providers 
				Resource Locks
				Azure Blueprints
				Resources Tags
				Access Control 
				Role-Based Access Controls (RBAC) 
				Azure Policies 
				ARM Templates 
				
				
Azure Resource Manager - Use Case
	Think of Azure Resource Manager (ARM) as a gate keeper. 
	All requests flow through ARM and it decides whether that request can be performed on a resource. 
	
	
Azure Resource Manager - Scoping
	What is scope? 
	Scope is a boundary of control for azure resources. it is a way to governyou resource by placing resources 
		within a logical grouping 
		and also applying a logical restriction in the form of rules 
		
	Management Groups - A logical grouping of multiple subscriptions 
		Subsciptions - grants you access to Azure services based on a billing and support agreement
			Resource Groups - a logical grouping of multiple resources 
				Resources - an azure service eg. Azure VM's 
				
				
Azure Resource Manager - Subscriptions
	Before you can do anything in your Azure account. You'll need to have a subscription. An Azure Account can have multiple subscriptions and the most common three are: 
		Free Trial 
		Pay as you go 
		Azure for Students 
	At the subscription level you'll have the ability to set: 
		Resource Tags
		Access Controls
		Resource Groups
		
		
Azure Resource Manager - Management Groups
	Managing multiple subscriptions (accounts) into a hierarchal structure. 
	Each directory is given a single top level management group called the "root" management group
	All subscriptions within a management group automatically inherit the conditions applied to the management group
	
	
Azure Resource Manager - Resource Groups
	Resource Groups - A container that holds related resources for an Azure solution
	Resource - A manageable item that is available through Azure 
	Resourece Provider - A service that supplies Azure resources
	
	
Azure Resource Manager - Resource Providers
	Resource Providers - In order to use Azure resources you have to register Resourec Providers
	Many Resource Providers are registered by default for you with you Subscription
	You can register resource providers under your subscription
	
	
Azure Resource Manager - Resource Tags
	A tag is a key and value pair that you can assign to azure resources. 
		Tags allow you to organize your resources in the following ways: 
			Resource management 
				Specific workloads, environments eg. Developer environments 
			Cost management and optimization
				Cost tracking, budgets, alerts 
			Operations Managment 
				Business commitments and SLA operations eg. Mission critical services 
			Security 
				Classification of data and security impact
			Governance and regulatory compliance
			Automation
			Workload optimization
			
			
Azure Resource Manager - Resource Locks
	As an admin, you may need to lock a subscription, resource group, or resource to prevent other userse from accidentally deleting or modifying critical resources. 
		In the Azure portal you can set the following lock levels 
			Cannot delete 
				authorized users can still read and modify a resource but they cant delete the resource 
			ReadOnly
				authorized users can read a resource, but they can't delete or update the resources 		
				
				
Azure Resource Manager - Azure Blueprints	
	Azure blueprints enable quick creation of governed subscriptions. 
	Compose artifacts based on common organization-based patterns into re-usable blueprints. 
	The service is designed to help with environment setup
	Blueprints are a declarative way to orchestrate the deployment of various resource templates and other artifacts such as: 
		Role Assignments
		Policy Assignments 
		Azure Resource Manager templates (ARM Templates) 
		Resource Groups
			The Azure Blueprints service is backed by the globally distributed Azure Cosmos DB 
			Blueprint objects are replicated to multiple Azure regions. 
		ARM Templates vs Azure Blueprints 
			Nearly everything that you want to include for deployment in Azure Blueprints can be accomplished with an ARM template
			ARM Template
				ARM templateds are stored either locally or in source control
				There no active connection or relationship to the ARM template 
			Azure Blueprints 
				relationship between the blueprint definition (what should be deployed) and the blueprint assignment (what was deployed) 
		Azure Blueprints supports improved tracking and auditing of deployments 
		
		
ARM Templates - Introduction 
	What is Infrastructure as Code? (IaC) 
		the process of managing and provisioning computer data centers (eg. Azure) through machine-readable definition files (eg. JSON files) rather than physical hardware configuration or interactive configuration tools. 
		You write a script that will setup cloud services for you. 
		IaCs can either be: 
			Declarative - You defined exactly what you want, and you get exactly that
			Imperative - You define what you generally want, and the service will guess what you want. 
	ARM Templates are JSON files that define azure resources you want to provision and azure services you want to configure 
		With ARM templates you can: 
			ARM templates are declarative: (you get exctly what you define)
			stand up, tear down or share entire architectures in minutes
			Reduce configuration mistakes 
			Know exactly what you have defined for a stack to establish an architecture baseline for compliance 
	With ARM templates you can: 
		ARM teplates are declarative. (you get exactly what you define) 
		stand up, tear down or share entire architecture in minutes
		Reduce configuration mistakes 
		Establish an architecture baseline for compliance 
		Modulatrity break up your architecture in multiple files and reuse them
		Extensibility Add Powershell and Bash scripts to your templates 
		Testing you can use the ARM template tool kit (arm-ttk)
		Preview Changes Before you create infrastructure via template, see what it will create
		Built-In Validation will only deploy your template if it passes 
		Tracked Deployments Keep track of changes to architecture over time
		Policy as Code Apply Azure policies to ensure you remain compliant
		Microsoft Blueprints (establishes relationship between resource and the template) 
		CI/CD Integration
		Exportable Code (exporting the current state of resource groups and resources)
		Authoring tools Visual Studio Code has advanced features for authoring ARM templates 
		
		
ARM Templates - Arm Template Skeleton
	Skeleton - the genreal structure of an ARM template 
	$schema - describes the properties that are avaialable within a template. 
	contentVersion - the version of the template. 
		You can provide any value for this element
	apiProfile - Use this value to avoiid having to specify API versions for each resource in the template 
	parameters - values you can pass along to your template 
	variables - you transform parameters or resource properties using function expressions
	Functions - User-defined functions available within template 
	resources - the azure resources you'll want to deploy or update 
	outputs - values that are returned after deployment 
	
	
ARM Templates - ARM Template Resources 
	Resource - An Azure Resource you want to provision
		type - type of the resources
			Follows the format of {ResourceProvider}/ResourceType
		apiVersion - Version of the REST API to use for the resource
			Each resource provider published its own API versions, 
		name - Name of the resource
		location - Most resources have a location property
			The region where the resource will be deployed
		Other Properties - Other properties we can use to configure the resource
		Will vary per resource type
		
		
ARM Templates - Parameters
	Parameters - Allows you to pass variables to your ARM template
	type - the expected data type of the inputed value 
		string,securestring, int, bool, object, securedObject, and array. 
	defaultValue is provided it will be set to this value 
	allowedValues an array of allowed values 
	minValue the minimal possible value
	maxValue the maximum length of characters or array
	minLength the maximum length of characters or array
	maxLength the maximum length of characters or array
	description the dexcription that will be displayed in the Azure Portal
	
	
ARM Templates - ARM Template Functions
	Functions - Allows you to apply transformations to your ARM variables 
		Template Functions - built-in functions 
		Used-Defined Functions - custom functions you create 
		Functions are called using parentheses eg. (): 
	Template Functions 
		Array: array, concat, contains, createaray, empty, first, intedrsection, last, length, min, max, range, skip, take, union
		Comparison: coalesce, equals, less, lessOrQuals, greater, greatOrEquals
		Date: dateTimeAdd, utcNow 
		Deployment: deployment, environment, parameters, variables
		Logical: and, or, if, not
		Numeric: add, copyIndex, div, float, int, min, max, mod, mul, sub
		Object: contains, empty, intersections, json, length, union
		Resource: extensionResourceId, ListAccountSas, listKeys, listSecrets, list*, picZones, providers, reference, resourceGroup, resourceiD, subscription, subscriptionResourceId, tenantResourceId 
		String: base64, base64ToJson, base64ToString, concat, contains, dataUri, DataUriTOString, empty, endsWith, first, format, guid, indexOf, last, lastIndexOf, length, newGuid, padLeft, replace, skip, split startsWith, string, substring, take, toLower, toUpper, trim, uniqueString, uri, uriComponent, uriComponentToString. 
		
		
ARM Templates - ARM Template Variables 
	Nested Variables - You can use json object to have nested variables to scope your variables for multiple use cases. 
	Scoping / Nesting variables based on environment
		"variables": {
		  "environmentSettings": {
		    "test": {
		      "instancesize": "Small", 
		      "instanceCount": 4
		    }
		  }
		}, 
	Using Params to choose the environment
		"parameters": {
		  "environmentName": { 
		    "type": "string", 
		    "allowedValues": [
		      "test", 
		      "prod"
		    ]
		  }
		},
	Referencing nested variables eg Variables()[].property
		"[variables('environmentSettings')[parameters('environmentName')].instanceSize]" 


ARM Templates - ARM Templates Outputs
	Outputs - Returns values from deployed resources, so you can use them programmatically
	You specify the type and value under outputs
		"outputs": { 
		  "resourceID": {
		    "type": "string",
		    "value": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressses_name'))]"
	You can use the Azure API via CLI, Powershell or SDK to fetch outputs 
	
	
Storage Accounts - Introduction to Storage Accounts 
	Azure Storage Accounts - Contains all of your Azure Storage data objects: blobs, files, queues, tables, and disks
	Azure Storage offers several types of stroage accounts. 
	Each with different features and their own pricing models 
		General-purpose v1 (legacy)
		General-purpose v2
		BlobStorage (legacy)
		BlockBlobStorage
		File Stroage
	Storage Accounts vary with the following features: 
		Supported Services (What can I put in this storage account?)
			Blob, File, Queue, Table, Disk, and Data Lake Gen2
		Performance Tiers (how fast will my read and writes be?)
			Standard and Premium
		Access Tiers (how often do I need quick access to files?)
			Hot, Cool, Archive
		Replication (How many redundant copies should be made and where?)
			LRS, GRS, RA-GRS, ZRS, GZRS, RA-GZRS
		Deployment Model (Who should deploy the supported services?)
			Resource Manager, Classic
			
	
Storage Accounts - Storage Comparison
	General-purpose V2 is the most common storage type aside from Blob Storage
Storage Accounts - Core Storage Services
	 Azure has 5 core storage services 
	 	Azure Blob - A massively scalable objecty store for text and binary data.
	 		Also included support for Big Data Analytics through Data Lake Storage Gen 2
	 	Azure Files - Managed file shares for on-premises deployments
	 	Azure Queues - A messaging store for reliable messaging between application components 
	 	Azure Tables - a NoSQL store for schema-less storage of structured data
	 	Azure Disks = Block level storage volumes for Azure VM's 
	 	
	 	
Storage Accounts - Performance Tiers
	Ther are 2 types of performance tiers for storage accounts: Standard and Premium 
		IOPS - stands for input / Output operations per second 
		Premium Performance
			Stored on Solid State Drives 
			Optimize for low latency
			Higher throughput
			use cases: 
				Interactive Workloads
				Analytics
				AI or ML 
				Data Transformation
			An SSD has no moving parts and data is distributed randomly. This is why it can read and write so fast 
		Standard Performance
			Stored on Hard Disk Drives 
			Varied performance based on access tier (Hot, Cool, Archive) 
			Use Cases: 
				Backup and disaster recovery
				Media Content
				Bulk Data Processing
			An HDD has moving parts, an arm that needs to read and write data sequential to a disk. It is very good at writing or reading large amounts of data that is close together. 
			
			
Storage Accounts - Access Tiers
	There are 3 types of access tiers for Standard storage: Cool, Hot and Archive
	Hot 
		Data that's accessed frequently 
		Highest storage cost, lowest access cost 
		Use Case
			Data thats in actvie use or expected to be accessed frequently 
			Data that's staged for processing and eventual migration to the cool access tier
	Cool
		Data that's infrequently accessed and stored for at least 30 days. 
		Lower storage cost, higher access cost
		Use Case: 
			Short-term backup and disaster recovery datasets 
			Older Media content not viewed frequently anymore but is expected to be available immediately when accessed 
			Large datasets that need to be stored cost effectively whie more data is being gathered for future processing. 
	Archive 
		Data that's rarely accessed and stored for at least 180 days
		Lowest storage cost, highest access cost 
		Use Case: 
			Long-term backup, secondary backu, and archival datasets
			Original (raw) data that must be preserved, even after it has been processed into final usable form
	Account level tiering 
		Any blob that doesn't have an explicitely assigned tier infers the tier form the Storage Account access tier setting
	Blob-Level Tiering
		You can upload a blob to the tier of your choice
		Changing tiers happens instantly with the exception from moving out of archive 
	Rehydrating a blob 
		When moving a blob out of archive into another tier it can take several hours. This is known as "rehydrating" 
	Blob Lifecycle Management 
		You cna create rule based policies to transition data to different tiers Eg. After 30 days move to cool storage 
	When a blob is uploaded or moved to another tier It's charged at the new tier's rate immediately upon tier change. 
	When moving from a cooler tier: 
		The operation is billed as a write operation to the destination tier. 
		Where the write operation (per 10,000) and data write (per GB) charges of the destination tier apply 
	When moving from a hotter tier: 
		The operation is billed as a read from the tier source
		Wher the read operation (per 10,000) and data retrieval (per GB) charges of the source tier apply
		Eary deletion charges for any blob moved out of the cool or archive tier may apply as well 
	Cool and archive early deletion
		Any blob that is moved into the cool tier (GPv2 accounts only) is subject to a cool early deletion period of 30 days. 
		Any blob that is moved into the archive tier is subject to an archive early deletion period of 180 days. This charge is prorated. 
		
		
Storage Accounts - Replication Data Redundancy
	When you create a Storage account you need to choose a Replication type
	Replication stores multiple copies of your datra so that it is protected from: 
		planned events 
		transient hardware failures 
		network or power outages 
		massive natural disasters 
	Primary Region Redundancy 
		Locally Redundant Storage (LRS) 
		Zone-Redundant Storage (ZRS) 
	Secondaary Region Redundancy 
		Geo-redundant storage (GRS) 
		Geo-Zone-Redundant Storage (GZRS) 
	Secondary Region Rendundancy with Read Access
		Read-access geo-redundant storage (RA-GRS) 
		Read-access geo-redundant storage (RA-GZRS)
		
		
Storage Accounts - LRS ZRS
	Redundancy in the Primary Region
		Data is replicated 3 times in the primary region
		There are two options for storing in the primary region
			Locally Redundant Storage (LRS)
				Copies data synchronously in primary region
				99.999999999 durability (11 nines)
				Cheapest option
			Zone-Redundant storage (ZRS)
				copies data synchronously across 3 AZs in primary region 
				99.9999999999 (12 9's) durability 
				
				
Storage Accounts - GRS GZRS
	Redundancy in the Secondary Region 
		Replicate to a secnodary region in case of primary regional disaster 
		The secondary region is determined based on your primary's pair region 
		Secondary region isn't available for read or write access (except in event of failover) 
		Geo Redundant Storage (GRS) 
			copies data synchronously 
			copies data asynchronously to another region
			99.99999999999999% (16 9's) of durability
		Geo-Zone-redundant storage (GZRS) 
			copies data synchronously across 3 AZs in a physical region 
			copies data asynchronously to another region
			99.99999999999999% (16 9's) of durability
			
			
Storage Accounts - RA-GRS RA-GZRS
	Redundancy in the Secondary Region with Read Access 
		Data is replicated synchronously to primary region
		Your data will be "in-sync" with your primary and you'll have read access. 
	Read-Access Geo Redundant Storage (RA-GRS) 
		copies data synchronously in primary region
		copies data synchronously to another region 
		99.99999999999999% (16 9's) of durability
	Read-Access Geo-Zone-Redundant storage (GA-GZRS) 
		copies data synchronously across 3 AZs in a physical region
		copies data synchronously to another region
		99.99999999999999% (16 9's) of durability
		
		
Storage Accounts - Introduction to Azure Blob
	Blob storage is an object-store that is optimized for storing massive amounts of unstructured data. 
	Unstructured data is dat taht doesn't adhere to particular data model or definition, such as text or binary data. 
		Azure blobs are composed of the components:
			Storage account 
			FQDN 
			Containers (similar to a folder in a file system) 
			Blobs - the actual data being stored 3
			
			
Storage Accounts - Azure Blob Types 
	Azure Storage supports 3 typs of blobs: 
		Block blobs
			store text and binary data 
			made up of blocks of data that can be managed individually 
			store up to about 4.75 TiB of data 
		Append blobs 
			Optimized for append operations
			Ideal for scenarios such as loggind data from a virtual machine 
		Page blobs 
			store random access files up to 8TB in size 
			store virtual hard drive (VHD) files and serve as disks for Azure virtual machines
			
			
Storage Accounts - Azure Blob Moving Data
	There are multiple ways to move data into Azure Blob Storage 
		AzCopy - Easy to use comand line tool for windows and linux 
		Azure Storage Data Movement library - .NET library (uses AzCopy underneath) 
		Azure Data Factory - (An ETL service by Azure) 
		Blobfuse - Virtual file system driver. access data through linux file system
		Azure Data Box - A rugged device used to physically transport data to Azure 
		Azure Import / Export Service - A service where you ship your physical disks for data transfer onto Azure 
		
		
Storage Accounts - Introduction to Azure Files
	Azure Files is a fully managed file share in the cloud 
	A file share is a centralized server for storage that allows multiple connections. 
		Its like having one big shared drive that everyone (Virtual Machines) can work on at the same time
	To connnect to the file share a network protocol is used: 
		Server Message Block (SMB) 
		Network File System (NFS) 
	When a connection is established the file share's filesystem will be accessible in the specific directory within your own directory tree. This is known as mounting. 
	
	
Storage Accounts - Azure Files Use Cases 
	Use Cases
		Completely replace or supplement on-premises file servers Network Attach Storage (NAS) devices
			Lift-and-Shift means when you move workloads without rearchitecting, eg. importing local VMs to the cloud
			Classic Lift - where both the application and its data are moved to Azure 
			Hybrid Lift - where the application data is moved to Azure Files, and the application continues to run on-premises
		Simplify cloud development
			Shared application settings - Multiple VMs and developer workstations need to access the same config files 
			Diagnostic share - All VMs log to file share, developers can mount and debug all logs in a centralized place
			Dev/Test/Debug - Quickly share tools for developer needed for local environments
		Containerization
			You can use Azure Files to persist volumes for stateful containers
		Why use Azure files instead of setting up your own File server? 
			Shared Access - Already setup to work with standard networking protocols SMB anad NFS 
			Fully Managed - Its kept up to date with security patches, designed to scale
			Scripting and Tooling - You can automate the management and creation of file shared with Azure API Powershell
			Resiliency - Build to be durable and always working  
			
			
Storage Accounts - Azure Files Feature
	Backups 
		You can backup your file share with shared snapshots
			They are read-only 
			Incremental - (they only contain as much data as has chaged since the previous snapshot)
			You can have up to 200 snapshots per file share
			you can retain backups for up to 10 years 
			Backups are stored within your file share (if you delete your file share you will delete your backups)
		Soft Delete 
			You can prevent accidental deletion by turning on Soft Delete (Storage will be marked for deletion and retained for a period of time before final delete occurs
		Advanced Threat Protection
			An additional layer of security intelligence that provides alerts when it detects anomalous activity on your storage account 
		Store Tiers
			Premium - Store on to SSD with single-digit milliseconds for most IO operation
			Transaction Optimized - Store on HDD with transaction heavy workloads that don't need the latency offered by premium file shares (historically this tier has been called standard) 
			Hot - ooptimized for general purpose file sharing scenarios such as team share and Azure File Sync
			Cool - Stored on HDD for cost-efficient storage optimized for online archive storage scenario
	Types of Storage 
		General purpose version 2 (GPv2) - deployed on to HDD
		FileStorage - deployed onto SSD
	Identity 
		On-Premise - Azure Storage can be joined to an on-premise Active Directroy Domain Service
		Managed - Azure Storage can be joined to Microsoft managed active directory domain service 
		Store Account Key - A username (storage account name) and password (account key) can be used to mount 
	Networking 
		Azure Files are accessible inside or outside your AWS Account from anywhere via storage account public endpoint. 
		SMB Connects to port 445, your organization may need to unblock this port so you can mount your file share. 
	Encryption
		Azure Files is encrypted-at-rest using Azure Storage Encryption (SSE) 
		
		
Storage Accounts - Azure File Sync
	Azure File Sync is a service that allows you to cache Azure file shares on an on-premises Windows Server or cloud VM. 
		You can use any protocol that's available on Windows Server to access your data locally, including SMB, NFS, and FTPS
		You can have as many caches as you need across the world
		
		 
Storage Accounts - Azure Storage Explorer
	A standalone app that makes it easy to work with Azure Storage data on Windows, MacOS, and Linux. 
		You can create Blob containers, upload files, create snapshots of Disk, and more. 
		
		
Storage Accounts - AZCopy
	AZCopy is a command-line utility that you can use to copy blobs or files to or from a storage account. 
		Its an executable file you download 
		you will need to have the level of authorization via attached roles
			To download 
				storage blob data reader 
			To upload
				Storage Blob Data Container 
				Storage Blob Data Owner
		You gain access either via 
				Azure Active Directory (AD) 
				Shared Access Signature (SAS) 
		Use the Copy command to upload and download	
		
			
Storage Accounts - Azure Import Export Service
	Used to securely import large amounts of data to Azure Blob storage and Azure Files by shipping disk drives to an Azure DataCenter 
		You have 2 options for shipping drives opn import: 
			Use your own disk drives 
			Use Microsoft provided drives 
				Microsoft ships up to 5 encrypted solid-state disk drives (SSDs) known as Azure Data Box Disks with a 40TB total capacity per order, to your datacenter through a regional carrier. 
			You can quickly configure Azure Data Box Disk drives, copy data to disk drives over USB 3.0 connection, and ship the disk drives back to Azure. 
		To prepare your drive you'll need to use the command-line WAImport Export tool to 
			Prepare your disk drives that are shipped for import. 
			Copying your data to the drive 
			Encrypts the data on the dirve with AES-256 bit Bitlocker. 
			Generate the drive journal files used during import creation
			Helps Identify numbers of drives needed for export jobs 
		There are two versions of WAImportExport 
			Version 1 for import/export into Azure Blob storage. 
			Version 2 for importing data into Azure files
		WAImportExport tool is  only compatible with 64-bit Windows. 
		Once you have prepared your drives and generated a journal file you can create an Import Job
			The journal file stores basic informtion such as: 
				drive serial numbers 
				encryption key
				storage account details
			you'll specify Region and Storage Account 
			You'll provide shipping information
			For expert jobs you can 
				you can only export form Azure Blob 
				you can ship up to 10 empty drives to Azure per job
				You create an export job and the data is loaded onto those drives and shipped back to you  
				
				 
Storage Accounts - SAS
	A shared access signature (SAS) is a URI that grants restricted access rights to Azure Storage resoureces. 
		Share the URI to gratnt clients temporary access to specific set of permissions
	Types of shared access signatures
		Account-level SAS
			access to resources in one or more of the storage services 
		Service-level SAS 
			access to single the storage account by using the storage account key
		User delegation SAS 
			Access to storage account using Azure AD credentials
			Limited only to Blob and Containers 
			Microsoft considers this method best practice for accessing via SAS 
	A shared access signature comes into different formats 
		Ad hoc SAS 
			the start time, expiry time, and permissions are part of the URI 
			Any type of SAS can be an ad hoc SAS 
		Service SAS with stored access policy 
			A stored access policy is defined on a resource container (limited to blob container, table, queue, or file share) 
			The stored access policy can be associated to multiple SAS to manage constraints 
	The URI Format Itself
		Blob URI: https://myaccount.blob.core.windows
		sv (Storage services version) which version of the storage services to use 
		st (start time) the time SAS becomes valid 
		se (Expiration time) the time when the SAS becomes invalid eg. Container (c) or blob (b) 
		sr (Storage Resource) if the resource is a  blob, queue 
		sp (permissions) what operations can be performed against the storage resource eg. Read (r) and Write (w)
		sig (Signature) used to authenticate access to a SHA256 algorithm
		You can generate SAS via 
			Azure SDK 
			Azure Portal 
			
			
Virtual Machines - Introduction 
Virtual Machines - Operating Systems
Virtual Machines - Cloud Init
Virtual Machines - Sizes
Virtual Machines - ACUs
Virtual Machines - MobileApp
Virtual Machines - VM Generations
Virtual Machines - 3 Ways to Connect
Virtual Machines - SSH
Virtual Machines - RDP
Virtual Machines - Bastion
Virtual Machines - Windows Vs Linux
Virtual Machines - Update Management 
